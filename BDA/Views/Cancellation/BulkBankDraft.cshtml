
@{
    ViewData["Title"] = "New Instruction Letter";
    //Layout = "~/Views/Shared/_FormLayout.cshtml";
}
@section Styles{
    <link href="~/assets/css/ui-lightness/jquery-ui.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/jquery-confirm.min.css.css">
    <style>

        input[readonly] {
            background-color: #fdffe3;
            border: none;
        }

        .ui-datepicker .ui-datepicker-prev,
        .ui-datepicker .ui-datepicker-next {
            position: absolute;
            top: 2px;
            width: 1.8em;
            height: 1.8em;
            background: #ffffff;
            /*content: "H";*/
        }
    </style>
}
<div class="content-inner">
    <div class="container-fluid">
        <!-- Begin Page Header-->
        <div class="row">
            <div class="page-header">
                <div class="d-flex align-items-center">
                    <h2 class="page-header-title">Bulk Processing</h2>
                    <div>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="db-default.html"><i class="ti ti-home"></i></a></li>
                            <li class="breadcrumb-item"><a href="#">Bulk Processing</a></li>
                            <li class="breadcrumb-item active">Update Bank Draft Cancellation</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Page Header -->
        <!-- Begin Row -->
        <div class="row flex-row">
            <div class="col-xl-12">
                <!-- Form -->
                <div class="widget has-shadow">
                    <div class="widget-header bordered no-actions d-flex align-items-center">
                        <h4>Update Bank Draft Cancellation</h4>

                    </div>
                    <div class="widget-body">
                        <div class="widget-body sliding-tabs">
                            <ul class="nav nav-tabs form-tab" id="ul-form-tab" role="tablist">
                                <li class="nav-item">
                                    <a class="nav-link active" id="base-tab-1" data-toggle="tab" href="#tab-1" role="tab" aria-controls="tab-1" aria-selected="true">Action Pending</a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" id="base-tab-2" data-toggle="tab" href="#tab-2" role="tab" aria-controls="tab-2" aria-selected="false">Submitted</a>
                                </li>
                            </ul>
                            <div class="tab-content pt-3">
                                <div class="tab-pane fade active show" id="tab-1" role="tabpanel" aria-labelledby="base-tab-1">
                                    <div class="row flex-row justify-content-center">
                                        <div class="col-xl-12">
                                            <div class="form-group row mb-3">
                                                <div class="col-sm-12 mb-3">
                                                    <div id="jsGrid"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="tab-pane fade show" id="tab-2" role="tabpanel" aria-labelledby="base-tab-2">
                                    <div class="row flex-row justify-content-center">
                                        <div class="col-xl-12">
                                            <div class="form-group row mb-3">
                                                <div class="col-sm-12 mb-3">
                                                    <div id="jsGrid2"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <input type="file" id="browse" name="fileupload" style="display: none" onChange="Handlechange();" />
                    <input type="hidden" id="filename" />
                    <button class="btn btn-primary" id="example" style="display: none">example alert</button>
                </div>
                <!-- End Form -->
            </div>
        </div>
        <!-- End Row -->
    </div>
    <!-- End Container -->
    <!-- Begin Page Footer-->
    <!-- End Page Footer -->
    <a href="#" class="go-top"><i class="la la-arrow-up"></i></a>
    <!-- Offcanvas Sidebar -->
    @*@Html.Partial("_Log.cshtml")*@
    <!-- End Offcanvas Sidebar -->
</div>


@section Scripts{
    @*<script src="db.js"></script>*@
    <script src="~/js/jquery-confirm.min.js"></script>

    <script>
        var fileinput = document.getElementById("browse");
        var upload;
        var insertControl;
        var answer;
        var ans;
        var userPreference;

        $("#example").confirm({
            title: 'Submission Confirmation!',
            content: 'Once submit, you cannot go back...',
            buttons: {
                ok: function () {
                    // here the button key 'hey' will be used as the text.
                    text: 'Ok',
                        $.alert('You clicked on "ok".');
                    answer = true;
                },
                cancel: {
                    text: 'Cancel', // With spaces and symbols
                    action: function () {
                        $.alert('You clicked on "cancel"');
                        answer = false;
                    }
                }
            
            }
 
        });

        function confirmation() {
            //answer = false;
            //$.confirm({
            //    title: 'Submission Confirmation!',
            //    content: 'Once submit, you cannot go back...',
            //    buttons: {
            //        ok: function () {
            //            // here the button key 'hey' will be used as the text.
            //            text: 'Ok',
            //                //$.alert('You clicked on "ok".');
            //            answer = "Ok";
            //        },
            //        cancel: {
            //            text: 'Cancel', // With spaces and symbols
            //            action: function () {
            //                //$.alert('You clicked on "cancel"');
            //                answer = "Cancel";
            //            }
            //        }

            //    }

            //});

            //return answer;

            if (confirm("Do you want to submit?") == true) {
                userPreference = "Ok";
            } else {
                userPreference = "Cancel";
            }

            return userPreference;
        }

        function fileUpload() {
           fileinput.click();
        }

        function Handlechange() {
            var textinput = document.getElementById("filename");
            textinput.value = fileinput.value;
            upload = fileinput.files[0];
            //console.log(upload);
            return upload;
        }

        function RemoveAttachment(id, type) {
            ShowNoty("warning", "Deleting Attachment..");
            $.ajax({
                type: "GET",
                url: "/Cancellation/RemoveAttachment/" + id,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.response.statusCode == 200) {
                        $('#hdnWCSuratKelulusan').val("");
                        $('#noFile-' + type).show();
                        $('#hasFile-' + type).hide();
                        ShowNoty("success", data.message);
                    } else {
                        ShowNoty("error", data.message);
                    }
                }
            });
        }

        $(function () {
            //$("#jsGrid2").hide();
            var db = {

                loadData: function (filter) {
                    //return $.grep(this.clients, function (client) {
                    //    return (!filter.BDReferenceNo || client.BDReferenceNo.indexOf(filter.BDReferenceNo) > -1)
                    //        && (!filter.CoverMemoRefNo || client.CoverMemoRefNo.indexOf(filter.CoverMemoRefNo) > -1)
                    //        && (!filter.SendMethod || client.SendMethod === filter.SendMethod)
                    //        && (!filter.PostageNo || client.PostageNo.indexOf(filter.PostageNo) > -1)
                    //        && (!filter.ContactNo || client.ContactNo.indexOf(filter.ContactNo) > -1)
                    //        && (!filter.BankDrafNoIssued || client.BankDrafNoIssued.indexOf(filter.BankDrafNoIssued) > -1);
                    //});
                    return $.ajax({
                        type: "GET",
                        url: "/Cancellation/GetAllCancellationByStatus?_Status=Processed",
                        dataType: "JSON"
                    })
                },

                updateItem: function (d) {

                    //ans = confirmation();
                    ////alert(ans);

                    //if (ans == "ok") {
                        console.log(d.bankStatement);

                        var formData = new FormData();
                        formData.append("Id", d.id);
                        formData.append("BDNo", d.bdNo);
                        formData.append("ProjectNo", d.projNo);
                        formData.append("ReceivedDate", d.receivedDate);
                        formData.append("BankStatement", d.bankStatement);

                        return $.ajax({
                            method: "post",
                            type: "POST",
                            url: "/Cancellation/UpdateBDCancellation",
                            data: formData,
                            contentType: false,
                            processData: false,
                            success: function (data) {

                                if (data.response.statusCode == 200) {
                                    ShowNoty("success", data.message);
                                } else {
                                    ShowNoty("error", data.message);
                                }
                            },
                            failure: function (response) {
                                ShowNoty("error", response);
                            }

                        });

                    //}

                },

                deleteItem: function (deletingClient) {
                    var clientIndex = $.inArray(deletingClient, this.clients);
                    this.clients.splice(clientIndex, 1);
                }

            };

            window.db = db;


            db.sendMethod = [
                { Name: "", Id: "" },
                { Name: "Self Collect", Id: "SelfCollect" },
                { Name: "By Post", Id: "ByPos" }
            ];


            var MyDateField = function (config) {
                jsGrid.Field.call(this, config);
            };

            MyDateField.prototype = new jsGrid.Field({
                sorter: function (date1, date2) {
                    return new Date(date1) - new Date(date2);
                },

                itemTemplate: function (value) {
                    if (value == null) return "";
                    var date = new Date(value);
                    return ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate()))
                            + '/' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1)))
                            + '/' + date.getFullYear();
                },

                insertTemplate: function (value) {
                    return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date(), dateFormat: 'dd/mm/yy' });
                },

                editTemplate: function (value) {
                    value = Date.now;
                    return this._editPicker = $("<input>").datepicker({ dateFormat: 'dd/mm/yy' }).datepicker("setDate", new Date(value));
                    //return this._editPicker = $("<input>").datepicker({ dateFormat: 'dd/mm/yy' }).datepicker("setDate", new Date(value));
                },

                insertValue: function () {
                    return this._insertPicker.datepicker("getDate").toISOString();
                },

                editValue: function () {
                    return this._editPicker.datepicker("getDate").toISOString();
                }
            });

            jsGrid.fields.myDateField = MyDateField;

            $("#dialog").dialog({
                modal: true,
                autoOpen: false,
                position: {
                    my: "center",
                    at: "center",
                    of: $("#jsgrid")
                }
            });

            //$.ajax({
            //    type: "GET",
            //    url: "/Cancellation/GetAllCancellationByStatus?_Status=Processed",
            //    dataType: "json"
            //}).done(function (data) {

            $("#jsGrid").jsGrid({
                width: "100%",
                filtering: true,
                editing: true,
                inserting: false,
                sorting: true,
                paging: true,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 2,
                //deleteConfirm: "Do you really want to delete the client?",
                controller: db,

                onItemUpdating: function (args) {

                    if (args.item.receivedDate != null && args.item.bankStatement) {
                        ans = confirmation();

                        if (ans == "Cancel") {
                            args.cancel = true;

                        }
                    }

                    //alert(args.item.bankStatement);
                    
                },

                onItemUpdated: function (args) {
                    $("#jsGrid").jsGrid("loadData");
                    $("#jsGrid2").jsGrid("loadData");

                },

                fields: [
                    { name: "bdRefNo", title: "Reference No", type: "text", width: 150, editing: false },
                    { name: "bdNo", title: "BD No", type: "text", width: 100, editing: false },
                    //{ name: "coverMemoRefNo", title: "Cover Memo Ref No", type: "text", width: 150 },
                    { name: "projNo", title: "ProjNo", type: "text", width: 150, editing: false  },
                    { name: "nameOnBD", title: "Name On BD", type: "text", width: 100, editing: false  },
                    { name: "requester", title: "Requester", type: "text", width: 100, editing: false  },
                    { name: "compCode", title: "Comp. Code", type: "text", width: 100, editing: false },
                    { name: "ba", title: "Bus Area", type: "text", width: 60, editing: false },
                    { name: "bdAmount", title: "Amount", type: "text", width: 60, editing: false },
                    { name: "receivedDate", title: "Received Date", type: "myDateField", width: 100 },
                    {
                        name: "bankStatement", title: "Bank Statement", width:100,
                        itemTemplate: function (val, item) {

                            if(val != null && val !="")
                                return "<a href='../documents/" + val + "'><i class='ti-printer' style='font-size:1.5em;'></i></a>";

                        },
                        insertTemplate: function (val, item) {
                            if (val != null && val != "") {
                                console.log(val.name + 'file hehe');
                                var link = "RemoveAttachment('" + item.id + "','BankStatement')";
                                return '<a onclick=' + link + '><i class="la la-trash" style="font-size:1.5em;"></i></a>';
                            }
                            else {
                                   var insertControl = this.insertControl = $("<button>").html('Upload').addClass('btn btn-light').css({ height: 30, width: 90 }).on("click", function () {
                                    fileUpload();
                                    //if (attachment != null) {
                                    //    this.insertControl += '<p>dede</p>'
                                    //}

                                });



                            }

                            return insertControl;
                        },
                        insertValue: function () {
                            var file;
                            file = Handlechange();
                            console.log(file);

                            return file;
                        },
                        editTemplate: function (val, item) {
                            if (val != null && val != "") {
                                console.log(val.name + 'file hehe');
                                var link = "RemoveAttachment('" + item.id + "','BankStatement')";
                                return '<a onclick=' + link + '><i class="la la-trash" style="font-size:1.5em;"></i></a>';
                            }
                            else {
                                insertControl = this.insertControl = $("<button>").html('Upload').addClass('btn btn-light').css({ height: 30, width: 90}).on("click", function () {
                                    fileUpload();
                                    //if (attachment != null) {
                                    //    this.insertControl += '<p>dede</p>'
                                    //}

                                });

                                $("#browse").on('change', function () {
                                    //do whatever you want
                                    //var mySecondDiv = $("<div id='mySecondDiv'>hello</div>");
                                    //insertControl.add(mySecondDiv);
                                    //alert($(this).val());
                                    $("#p1").remove();
                                    insertControl.before("<p id='p1' style='font-size: 9px;'>" + fileinput.files[0].name + "</p>");
                                    //$(this).val()

                                    //html($(this).val());
                                    //return this.insertControl = "<a onclick=''><i class='la la-trash' style='font-size: 1.5em;'></i></a>";
                                });
                            }
                            return insertControl;
                        },
                        editValue: function () {
                            var file;
                            file= Handlechange();
                            console.log(file);

                            return file;
                        },
                        //align: "center",
                        //width: 30
                    },
                    { type: "control", deleteButton: false, modeSwitchButton: false }
                ],
                // controller: {

                //    loadData: function (filter) {
                //        //alert(filter.sendMethod);
                //        return $.grep(data, function (item) {
                //            // client-side filtering below (be sure conditions are correct)
                //            //return (!filter.sendMethod || item.sendMethod === filter.sendMethod)
                //            return (!filter.bdRefNo || item.bdRefNo === filter.bdRefNo)
                //                && (!filter.bdNo || item.bdNo === filter.bdNo)
                //                && (!filter.projNo || item.projNo === filter.projNo)
                //                && (!filter.nameOnBD || item.nameOnBD === filter.nameOnBD)
                //                && (!filter.requester || item.requester === filter.requester)
                //                && (!filter.compCode || item.compCode === filter.compCode)
                //                && (!filter.ba || item.ba === filter.ba)
                //                && (!filter.bdAmount || item.bdAmount === filter.bdAmount);
                //        });
                //     },

                //     updateItem: function (d) {

                //         console.log(d.bankStatement);

                //         var formData = new FormData();
                //         formData.append("Id", d.id);
                //         formData.append("BDNo", d.bdNo);
                //         formData.append("ProjectNo", d.projNo);
                //         formData.append("ReceivedDate", d.receivedDate);
                //         formData.append("BankStatement", d.bankStatement);

                //         return $.ajax({
                //             method: "post",
                //             type: "POST",
                //             url: "/Cancellation/UpdateBDCancellation",
                //             data: formData,
                //             contentType: false,
                //             processData: false
                //         });
                //         //}

                //     },

                //},
            });
                //})


        });

            var db2 = {

                loadData: function (filter) {

                    return $.ajax({
                        type: "GET",
                        url: "/Cancellation/GetAllCancellationByStatus?_Status=Received",
                        dataType: "JSON"
                    })
                },

                updateItem: function (d) {

                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: "@Url.Action("ReceiveBDCancellation", "Cancellation")",
                        data: d.bdRefNo + "," + d.coverMemoRefNo + "," + d.bankDraftNoIssued + "," + d.sendMethod + "," + d.postageNo + "," + d.contactNo + "," + d.bankDraftDate,
                        success: function (data) {
                            if (data.response.statusCode == 200) {
                                ShowNoty("success", data.message);
                            } else {
                                ShowNoty("error", data.message);
                            }
                        },
                        failure: function (response) {
                            ShowNoty("error", response);
                        }
                    });

                },

                deleteItem: function (deletingClient) {
                    var clientIndex = $.inArray(deletingClient, this.clients);
                    this.clients.splice(clientIndex, 1);
                }

            };

            window.db = db2;


            db2.sendMethod = [
                { Name: "", Id: "" },
                { Name: "Self Collect", Id: "SelfCollect" },
                { Name: "By Post", Id: "ByPos" }
            ];


            var MyDateField = function (config) {
                jsGrid.Field.call(this, config);
            };

            MyDateField.prototype = new jsGrid.Field({
                sorter: function (date1, date2) {
                    return new Date(date1) - new Date(date2);
                },

                itemTemplate: function (value) {
                    if (value == null) return "";
                    var date = new Date(value);
                    return ((date.getDate() > 9) ? date.getDate() : ('0' + date.getDate()))
                        + '/' + ((date.getMonth() > 8) ? (date.getMonth() + 1) : ('0' + (date.getMonth() + 1)))
                        + '/' + date.getFullYear();
                },

            });

            jsGrid.fields.myDateField = MyDateField;

        //$.ajax({
        //    type: "GET",
        //    url: "/Cancellation/GetAllCancellationByStatus?_Status=Received",
        //    dataType: "json"
        //}).done(function (data) {

            $("#jsGrid2").jsGrid({
                width: "100%",
                filtering: true,
                editing: false,
                inserting: false,
                sorting: true,
                paging: true,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 2,
                //deleteConfirm: "Do you really want to delete the client?",
                controller: db2,
                fields: [
                    { name: "bdRefNo", title: "Reference No", type: "text", width: 150, editing: false },
                    { name: "bdNo", title: "BD No", type: "text", width: 100, editing: false },
                    //{ name: "coverMemoRefNo", title: "Cover Memo Ref No", type: "text", width: 150 },
                    { name: "projNo", title: "ProjNo", type: "text", width: 150, editing: false },
                    { name: "nameOnBD", title: "Name On BD", type: "text", width: 100, editing: false },
                    { name: "requester", title: "Requester", type: "text", width: 100, editing: false },
                    { name: "compCode", title: "Comp. Code", type: "text", width: 60, editing: false },
                    { name: "ba", title: "Bus Area", type: "text", width: 60, editing: false},
                    { name: "bdAmount", title: "Amount", type: "text", width: 100, editing: false },
                    { name: "receivedDate", title: "Received Date", type: "myDateField", width: 100 },
                    {
                        name: "bankStatement", title: "Bank Statement", width: 100,
                        itemTemplate: function (val, item) {
                            console.log(val + 'hello');
                            if (val != null && val != "")
                                return "<a href='../documents/" + val + "'><i class='ti-printer' style='font-size:1.5em;'></i></a>";

                        }
                    }
                    //{ type: "control", deleteButton: false, modeSwitchButton: false, editButton: false }
                ],
                //controller: {

                //    loadData: function (filter) {
                //        //alert(filter.sendMethod);
                //        return $.grep(data, function (item) {
                //            // client-side filtering below (be sure conditions are correct)
                //            //return (!filter.sendMethod || item.sendMethod === filter.sendMethod)
                //            return (!filter.bdRefNo || item.bdRefNo === filter.bdRefNo)
                //                && (!filter.bdNo || item.bdNo === filter.bdNo)
                //                && (!filter.projNo || item.projNo === filter.projNo)
                //                && (!filter.nameOnBD || item.nameOnBD === filter.nameOnBD)
                //                && (!filter.requester || item.requester === filter.requester)
                //                && (!filter.compCode || item.compCode === filter.compCode)
                //                && (!filter.ba || item.ba === filter.ba)
                //                && (!filter.bdAmount || item.bdAmount === filter.bdAmount);
                //        });
                //    },
                //},
                });
            //})

    </script>
}