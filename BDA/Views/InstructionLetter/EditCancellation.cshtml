@model BDA.ViewModel.InstructionLetterViewModel
@{
    ViewData["Title"] = "New Instruction Letter";
    Layout = "~/Views/Shared/_FormLayout.cshtml";
    var BankName = Model.BankName;
    var RefNo = Model.ReferenceNo;
}
<div class="tab-content">
    <div class="tab-pane active" id="tab1">
        @using (Html.BeginForm("EditCancellation", "InstructionLetter", Model, FormMethod.Post, false, new { @id = "formEditInstructionLetter", @class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="section-title mt-5 mb-5">
                <h4>Letter Details</h4>
            </div>
            <div class="form-group row mb-3" style="margin-bottom:0rem!important">
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">Letter Reference No<span class="text-danger ml-2"></span></label>
                    @Html.TextBoxFor(x => x.RujukanNo, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group row mb-3" style="margin-bottom:0rem!important">
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">Email<span class="text-danger ml-2"></span></label>
                    @Html.TextBoxFor(x => x.InstructionLetterEmail, new { @class = "form-control", type = "email" })
                </div>
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">Date<span class="text-danger ml-2">*</span></label>
                    <div class="input-group">
                        @Html.HiddenFor(x => x.Id, new { id = "hdnId" })
                        @Html.TextBoxFor(x => x.LetterDate, new { @class = "form-control date", required = "required" })
                        @*<input type="text" class="form-control date" id="dateApply" placeholder="Select value">*@
                        <span class="input-group-addon">
                            <i class="la la-calendar"></i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-6">
                    <label class="form-control-label">Recipient's Title<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.AddressLine1, new { @class = "form-control", required = "required" })
                </div>
                <div class="col-sm-6">
                    <label class="form-control-label">Recipient<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.BankPIC, new { @class = "form-control", required = "required" })
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-6">
                    <label class="form-control-label">Address<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.AddressLine2, new { @class = "form-control", required = "required" })
                </div>
                <div class="col-sm-6">
                    <label class="form-control-label">Street<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.AddressLine3, new { @class = "form-control", required = "required" })
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">State<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.State, new { @class = "form-control", required = "required" })
                </div>
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">Value Date<span class="text-danger ml-2">*</span></label>
                    <div class="input-group">
                        @Html.TextBoxFor(x => x.ValueDate, new { @class = "form-control date", required = "required" })
                        <span class="input-group-addon">
                            <i class="la la-calendar"></i>
                        </span>
                    </div>
                </div>
            </div>

            <div class="section-title mt-5 mb-5">
                <h4>
                    Selected Bank Draft Application's Details
                </h4>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-12 mb-3">
                    <label class="form-control-label">Draft No<span class="text-danger ml-2">*</span></label>
                    @Html.DropDownListFor(x => x.ReferenceNo, Enumerable.Empty<SelectListItem>(), new { @class = "form-control select2-multiple", id = "ddlReferenceNo", multiple = "multiple", required = "required" })
                    <input type="hidden" id="hdnRefNo" value="@RefNo" class="form-control">
                    @*<input type="button" id="btnGetJumlah" value="Calculate Total" />*@
                </div>
            </div>
            @*<div class="form-group row mb-3">
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">Jumlah: </label>
                    <label class="form-control-label"><b>RM @ViewBag.Jumlah</b></label>
                </div>
            </div>*@
            @*<div class="form-group row mb-3">
                <div class="col-sm-12">
                    <label class="form-control-label">Ringgit<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.RinggitText, new { @class = "form-control", placeholder = "DUA RATUS RIBU RINGGIT", required = "required" })
                </div>
            </div>*@
            <div class="section-title mt-5 mb-5">
                <h4>Bank Details</h4>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-6 mb-3">
                    <label class="form-control-label">Bank Name<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.BankName, new { @class = "form-control", @readonly = "readonly" })
                    @*@Html.DropDownListFor(x => x.BankName, Enumerable.Empty<SelectListItem>(), new { @class = "form-control select2", id = "ddlBankName", required = "required" })
        <input type="hidden" id="hdnBankName" value="@BankName" class="form-control">*@
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-6">
                    <label class="form-control-label">Bank Account<span class="text-danger ml-2">*</span></label>
                    @Html.DropDownListFor(x => x.BankAccount, Enumerable.Empty<SelectListItem>(), new { @class = "form-control select2", id = "ddlBankAccount", required = "required" })
                    <input type="hidden" id="hdnBankAccount" value="@Model.BankAccount" class="form-control">
                    @*@Html.TextBoxFor(x => x.BankAccount, new { @class = "form-control", @value = "5-14253-33333-4", required = "required" })*@
                    @*<input type="text" value="5-14253-33333-4" class="form-control">*@
                </div>
                <div class="col-sm-6">
                    <label class="form-control-label">Bank Charges Account<span class="text-danger ml-2">*</span></label>
                    @Html.TextBoxFor(x => x.ChargedBankAccount, new { @class = "form-control", @value = "5-14253-50002-0", required = "required" })
                    @*<input type="text" value="5-14253-50002-0" class="form-control">*@
                </div>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-12">
                    <label class="form-control-label">Ref/Remarks<span class="text-danger ml-2"></span></label>
                    @Html.TextBoxFor(x => x.Remarks, new { @class = "form-control" })
                    @*<input type="text" value="Ref: 1)PKRPP 2)DBKL" class="form-control">*@
                </div>
            </div>
            <div class="wizard text-center">
                <button type="button" id="btnSubmit" class="btn btn-success">Save</button>
            </div>
        }
    </div>

    @*End of baru je tambah*@

    <div id="pnlSuccess" style="display:none" class="wizard text-center">
        <h3>Instruction Letter</h3><br /><br />
        <span class="heading">Reference No:</span><br />
        <span id="NewRefNo" class="sub-heading"></span>
        <br /><br />
        @*<button type="button" id="btnEdit" class="btn btn-info">Edit</button>
        <a href="Details" id="btnView" class="btn btn-primary">View Letter</a>
        <a href="SubmitToBank?id=@Model.Id" id="btnSubmitBD" class="btn btn-success">Submit to Bank</a>*@
    </div>
</div>


@section Scripts{

    <!--  validation script  -->
    <script src="~/js/jquery.validate.js"></script>
    @*added by Hanif 19112019*@
    <script>

         @*var vbBdNo = '@ViewBag.BDNo';
        if (vbBdNo != '') {
            //SetMultiSelectedValue(vbBdNo, "#ddlReferenceNo");
            SetMultiSelectedValue($('#hdnRefNo').val(), "#ddlReferenceNo");
        }*@
        SetMultiSelectedValue($('#hdnRefNo').val(), "#ddlReferenceNo");
        //SetMultiSelectedValue($('#hdnRefNo').val(), "#ddlReferenceNo");
        SetSelectedValue($('#hdnBankAccount').val(), "#ddlBankAccount");

        $('#ddlReferenceNo').select2({
            minimumResultsForSearch: -1,
            multiple: true,
            ajax: {
                url: "/InstructionLetter/GetAllCancellationBDNo",
                dataType: 'json',
                type: "GET",
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.name,
                                id: item.id
                            }
                        })
                    };
                }
            }
        });

        $('#ddlBankAccount').select2({
            allowClear: true,
            minimumResultsForSearch: -1,
            ajax: {
                url: "/InstructionLetter/GetAllBankAccountForCancellation",
                dataType: 'json',
                type: "GET",
                processResults: function (data) {
                    return {
                        results: $.map(data, function (item) {
                            return {
                                text: item.name,
                                id: item.id
                            }
                        })
                    };
                }
            }
        });

        $('#ddlBankAccount').on('select2:select', function (e) {
            var data = e.params.data;
            if (data.selected) {
                $('#hdnBankAccount').val(data.text);
            }
        });

        //var selectedValues = $("#hdnRefNo").val().split(',');
        //$("#hdnRefNo").val(selectedValues).trigger("change");
        //SetSelectedValue($('#hdnRefNo').val(), "#ddlReferenceNo");


        //Original
        //$("#btnSubmit").on('click', function (e) {
        //    $("#formEditInstructionLetter").submit();
        //});

        $("#btnGetJumlah").on('click', function (e) {
            var strRefNo = $('#ddlReferenceNo').val();
            $.ajax({
                type: "GET",
                url: '/InstructionLetter/GetJumlah?RefNo=' + strRefNo,
                processData: false,
                contentType: false,
                success: function (data) {
                    $('#RinggitText').val(data + ' RINGGIT');
                }
            });
        });

        //Validation
        $("#btnSubmit").on('click', function (e) {
            if ($("#formEditInstructionLetter").valid()) {
                $("#formEditInstructionLetter").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });

        $('#btnEdit').on('click', function (e) {
            $("#tab1").show();
            $("#pnlSuccess").hide();
        });


        $("#formEditInstructionLetter").submit(function (e) {
            
            e.preventDefault(); // avoid to execute the actual submit of the form.

            ShowNoty("warning", "Saving Instruction Letter..");

            var form = $(this);
            var url = form.attr('action');
            var fdata = new FormData();

            fdata.append("BankAccount", $('#hdnBankAccount').val());

            $("input, textarea, select").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            $.ajax({
                type: "POST",
                url: url,
                data: fdata,//form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        $("#tab1").hide();
                        $("#NewRefNo").html(data.letterRefNo);
                        $("#btnView").attr("href", "/InstructionLetter/Letter?LetterRefNo=" + data.letterRefNo);
                        $("#pnlSuccess").show();
                    } else {
                        ShowNoty("error", data.message);
                    }
                }
            });
        });


        $(document).ready(function () {
            $("#BankName").val("Maybank");
        });

    </script>
}