@model BDA.ViewModel.UserViewModel
@{
    ViewData["Title"] = "ChangePassword";
    //Layout = "~/Views/Shared/_FormLayout.cshtml";
}

@section Styles{

    <style>
        .btn-create {
            background-color: #5d5386;
            color: white;
        }

        .btn-apply:hover {
            background-color: white;
            color: black;
        }

        .btn-cancel:hover {
            background-color: red;
            color: white;
        }

        .btn-create:hover {
            background-color: limegreen;
            color: white;
        }

        .btn-lost:hover {
            background-color: #FFC300;
            color: white;
        }

        select.filter {
            height: 33px !important;
        }

        .form-staff {
            margin-bottom: 2rem;
        }
        /*<link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
        <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />*/

    </style>
}
<div class="content-inner">
    <div class="container-fluid">
        <!-- Begin Page Header-->
        <div class="row">
            <div class="page-header">
                <div class="d-flex align-items-center">
                    <h2 class="page-header-title">Change Password</h2>
                </div>
            </div>
        </div>
        <div class="row flex-row">
            <div class="col-xl-12 col-md-12">

                <div class="widget has-shadow">
                    @using (Html.BeginForm("ChangePassword", "Users", Model, FormMethod.Post, false, new { @id = "formChangePassword", @class = "form-horizontal" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="widget-body">
                            <form id="userForm">
                                <fieldset>
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <div class="form-staff row">
                                                @Html.HiddenFor(x => x.UserName)
                                                <div id="txtPasswordLabel" class="col-sm-2 form-control-label d-flex align-items-center">
                                                    New Password
                                                </div>
                                                <div class="col-xl-4">
                                                    @Html.TextBoxFor(x => x.Password, new { @class = "form-control", id = "txtPassword", type = "password",autocomplete="off" })
                                                </div>
                                                <div id="txtRepasswordLabel" class="col-sm-2 form-control-label d-flex align-items-center">
                                                    Retype New Password for Confirmation
                                                </div>
                                                <div class="col-xl-4">
                                                    @Html.TextBoxFor(x => x.Repassword, new { @class = "form-control", id = "txtRepassword", type = "password",autocomplete="off" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>

                            </form>
                            <div class="form-staff row">
                                <div id="saveBtn" class="col-xl-2">
                                    <button id="btnSave" type="button" class="btn btn-success">Change</button>
                                  
                                </div>
                            </div>
                        </div>
                    }
                        @*<div class="widget-body">
                <div class="table-responsive">

                    <a id="btnAssignRole" href="#" data-target="#assign-role-modal" class="btn btn-secondary" data-toggle="modal">
                        <i class="la la-plus"></i>
                        Assign Role
                    </a>
                    <br />
                    <br />
                    <div id="tblAssignRole" style="width:100%" class="table table-hover mb-0 display">
                    </div>
                </div>
            </div>*@
                    </div>
            </div>
        </div>
    </div>
    @Html.Partial("~/Views/Users/_ActionButton.cshtml")
    <!-- End Container -->
    <!-- Begin Page Footer-->
    <!-- End Page Footer -->
    <a href="#" class="go-top"><i class="la la-arrow-up"></i></a>
    <!-- Offcanvas Sidebar -->
    <!-- End Offcanvas Sidebar -->
</div>

@section Scripts{

    <script src="~/assets/vendors/js/datatables/datatables.min.js"></script>
    <script src="~/assets/vendors/js/datatables/dataTables.select.min.js"></script>
    <script src="~/assets/vendors/js/datatables/dataTables.buttons.min.js"></script>
    <script src="~/assets/vendors/js/datatables/buttons.flash.js"></script>
    <script src="~/assets/vendors/js/datatables/buttons.print.min.js"></script>
    <script src="~/assets/vendors/js/datatables/buttons.html5.js"></script>

    <script src="~/assets/vendors/js/tablefilter/jquery.tablefilter.js"></script>
    <script src="~/assets/vendors/js/tablefilter/jquery.tabledatafilter.min.js"></script>

    @*<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>*@

    <script>

        function isStrongPwd(password) {

            var count = 0;
            console.log(password);
            var uppercase = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
            var lowercase = "abcdefghijklmnopqrstuvwxyz";
            var digits = "0123456789";
            var splChars = "!#$^%&*()@@";
            var ucaseFlag = contains(password, uppercase);
            var lcaseFlag = contains(password, lowercase);
            var digitsFlag = contains(password, digits);
            var splCharsFlag = contains(password, splChars);

            if (ucaseFlag) {
                count++;
            }
            if (lcaseFlag) {
                count++;
            }
            if (digitsFlag) {
                count++;
            }
            if (splCharsFlag) {
                count++;
            }

            console.log(count);
            if (count >= 3) {
                return true;
            }
            else {
                return false;
            }

        }

        function contains(password, allowedChars) {

            for (i = 0; i < password.length; i++) {

                var char = password.charAt(i);

                if (allowedChars.indexOf(char) >= 0) { return true; }

            }

            return false;
        }

        $("#btnSave").on('click', function (e) {
            console.log('save');
            console.log($("#txtPassword").val().length);

            if ($("#txtPassword").val() != $("#txtRepassword").val()) {

                ShowNoty("error", "Password not matching");
            }
            else if ($("#txtPassword").val().length < 12) {
                ShowNoty("error", "Password must be atleast 12 characters length!");
            }
            else if (!isStrongPwd($("#txtPassword").val())) {
                ShowNoty("error", "Password must be consist of mix of 3 characters from 3 groups:" +
                    "\nUpper case alphabets: A,B,C,D,E...Z" +
                    "\nLower case alphabets: a,b,c,d,e...z," +
                    "\nNumber: 1,2,3,4...9, " +
                    "\nSpecial characters: !#$%^(...etc!");
            }
            else {
                $("#formChangePassword").submit();
            }
        });


        $(document).ready(function () {

            $("#formChangePassword").submit(function (e) {

                e.preventDefault(); 

                ShowNoty("warning", "Saving Password..");

                var form = $(this);
                var url = form.attr('action');

                $.ajax({
                    type: "POST",
                    url: url,
                    data: form.serialize(), 
                    success: function (data) {
                        console.log(data);
                        if (data.response.statusCode == 200) {
                            ShowNoty("success", data.message);
                            href = "/Users/EditUser?username=" + '@Model.UserName';
                            setTimeout(function () {
                                window.location.href = href;
                            }, 3000);
                        } else {
                            ShowNoty("error", data.message);
                        }
                        refresh();
                    }
                });
            });

        });

    </script>
}


