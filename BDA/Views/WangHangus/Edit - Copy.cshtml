@model BDA.ViewModel.BankDraftViewModel
@{
    ViewData["Title"] = "Wang Hangus";
    var status = Model.Status;
    var wangHangusId = Model.WangHangusViewModel.Id;
    var userId = User.Identity.Name;
}



@section Styles  {

    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css" />
    <link type="text/css" rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css" />
    <link rel="stylesheet" href="~/assets/css/bootstrap-select/bootstrap-select.min.css">
    <style>
    </style>
}
@{
    <div class="content-inner active">
        <div class="container-fluid">
            <!-- Begin Page Header-->
            <div class="row">
                <div class="page-header">
                    <div class="d-flex align-items-center">
                        <h2 class="page-header-title">Permohonan Deraf Bank <span> - Wang Hangus</span></h2>
                        <div>
                            <ul class="breadcrumb">
                                <li class="breadcrumb-item"><a href="db-default.html"><i class="ti ti-home"></i></a></li>
                                <li class="breadcrumb-item"><a href="#">New Application</a></li>
                                <li class="breadcrumb-item active">Wang Cagaran</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Page Header -->
            <div class="row flex-row">
                <div class="col-xl-12">
                    <!-- Form -->
                    <div class="widget has-shadow">
                        @*<div class="widget-header bordered no-actions d-flex align-items-center">
                                <h4>Wang Cagaran</h4>
                            </div>*@
                        <div class="widget-body">
                            <div class="row flex-row justify-content-center">
                                <div class="col-xl-12">
                                    <div id="rootwizard">
                                        @Html.Partial("_StatusPendingAction.cshtml")
                                        @Html.Partial("_StatusBar.cshtml")
                                        <div class="tab-content" style="font-family: Arial">

                                            <div class="body-content">
                                                <div>
                                                    @*style="text-align:center; border-bottom: 2px solid; border-bottom-color:blue"*@
                                                    @*<h4>Submitted by: En. Requestor</h4>*@
                                                    <br>
                                                </div>

                                                <div class="widget has-shadow">
                                                    <div class="widget-body sliding-tabs">
                                                        <ul class="nav nav-tabs form-tab" id="ul-form-tab" role="tablist">
                                                            <li class="nav-item">
                                                                <a class="nav-link @((status == "Draft" || status == "Withdrawn" ||status == "RejectedApprove" || status == "Submitted" || status == "Approved" || status == "Complete")? "active" : "")" id="base-tab-1" data-toggle="tab" href="#tab-1" role="tab" aria-controls="tab-1" aria-selected="true">Main Application</a>
                                                            </li>
                                                            <li class="nav-item">
                                                                <a class="nav-link @(status == "Accepted" ? "active": "") @((status == "Accepted" || status == "Processed" || status == "Issued" || status == "Complete")? "" : "disabled")" id="base-tab-2" data-toggle="tab" href="#tab-2" role="tab" aria-controls="tab-2" aria-selected="false">Bank Details</a>
                                                            </li>
                                                            <li class="nav-item">
                                                                <a class="nav-link @(status == "Processed" ? "active": "") @((status == "Processed" || status == "Issued" || status == "Complete")? "" : "disabled")" id="base-tab-3" data-toggle="tab" href="#tab-3" role="tab" aria-controls="tab-3" aria-selected="false">Bank Draft Issued</a>
                                                            </li>
                                                            <li class="nav-item">
                                                                <a class="nav-link @(status == "Issued" ? "active": "") @((status == "Issued" || status == "Complete")? "" : "disabled")" id="base-tab-4" data-toggle="tab" href="#tab-4" role="tab" aria-controls="tab-4" aria-selected="false">Bank Draft Acceptance</a>
                                                            </li>
                                                            @*<li class="nav-item pull-right">
                                                                    <a class="nav-link" id="base-tab-5" data-toggle="tab" href="#tab-5" role="tab" aria-controls="tab-5" aria-selected="false">Action History</a>
                                                                </li>*@
                                                        </ul>
                                                        <div class="tab-content pt-3">
                                                            <div class="tab-pane fade @((status == "Draft" || status == "Withdrawn" || status == "RejectedApprove" || status == "Submitted" || status == "Approved" || status == "Complete")? "active show" : "")" id="tab-1" role="tabpanel" aria-labelledby="base-tab-1">
                                                                @using (Html.BeginForm("Edit", "WangHangus", Model, FormMethod.Post, false, new { @id = "formEditApplication", @class = "form-horizontal", enctype = "multipart/form-data" }))
                                                                {
                                                                    @Html.AntiForgeryToken()
                                                                    @Html.HiddenFor(x => x.Status)
                                                                    @Html.HiddenFor(x => x.WangHangusViewModel.Id);
                                                                    @Html.Partial("_MainForm.cshtml")
                                                                    @Html.Partial("_Document.cshtml")
                                                                    @Html.Partial("_AccTable.cshtml")
                                                                    @Html.HiddenFor(x => x.WangHangusViewModel.Accounts, new { id = "listAccounting" });
                                                                    @*<input type="hidden" id="listAccounting" />*@
                                                                    @Html.Partial("_ApproverList.cshtml")

                                                                    if (status != "Draft")
                                                                    {
                                                                        @Html.Partial("_ActionHistory.cshtml")
                                                                    }

                                                                    if (((status == "Draft" || status == "RejectedApprove" || status == "Declined" || status == "Withdrawn") && Model.RequesterId == userId))
                                                                    {
                                                                        @Html.Partial("_Comment.cshtml")
                                                                    }
                                                                }
                                                                @using (Html.BeginForm("NextAction", "BankDraft", Model, FormMethod.Post, false, new { @id = "formNextAction", @class = "form-horizontal" }))
                                                                {
                                                                    if ((status == "Submitted" && Model.ApproverId == userId) || (status == "Approved" && User.IsInRole("TGBS Banking")))
                                                                    {
                                                                        @Html.AntiForgeryToken()
                                                                        @Html.HiddenFor(x => x.UserAction)
                                                                        @Html.Partial("_Comment.cshtml")
                                                                    }
                                                                }
                                                            </div>
                                                            @*<button id='btnAdd' for-table='#accountingTable' class="btn btn-secondary ripple">Add Row</button>*@
                                                            <div class="tab-pane fade @(status == "Accepted" ? "active show": "")" id="tab-2" role="tabpanel" aria-labelledby="base-tab-2">
                                                                @if (status == "Accepted" || status == "Processed" || status == "Issued" || status == "Complete")
                                                                {
                                                                    @using (Html.BeginForm("SaveBankDetails", "BankDraft", Model, FormMethod.Post, false, new { @id = "formSaveBankDetails", @class = "form-horizontal", enctype = "multipart/form-data" }))
                                                                    {
                                                                        @Html.HiddenFor(x => x.UserAction)
                                                                        @Html.Partial("_BankDetails.cshtml")
                                                                    }
                                                                }
                                                            </div>
                                                            <div class="tab-pane fade @(status == "Processed" ? "active show": "")" id="tab-3" role="tabpanel" aria-labelledby="base-tab-3">
                                                                @if (status == "Processed" || status == "Issued" || status == "Complete")
                                                                {
                                                                    @using (Html.BeginForm("SaveBankIssue", "BankDraft", Model, FormMethod.Post, false, new { @id = "formSaveBankIssue", @class = "form-horizontal", enctype = "multipart/form-data" }))
                                                                    {
                                                                        @Html.HiddenFor(x => x.UserAction)
                                                                        @Html.Partial("_BDIssued.cshtml")
                                                                    }

                                                                }
                                                            </div>
                                                            <div class="tab-pane fade @(status == "Issued" ? "active show": "")" id="tab-4" role="tabpanel" aria-labelledby="base-tab-4">
                                                                @if (status == "Issued" || status == "Complete")
                                                                {
                                                                    @using (Html.BeginForm("SaveBankAcceptance", "BankDraft", Model, FormMethod.Post, false, new { @id = "formSaveBankAcceptance", @class = "form-horizontal", enctype = "multipart/form-data" }))
                                                                    {
                                                                        @Html.HiddenFor(x => x.UserAction)
                                                                        @Html.Partial("_BDAcceptance.cshtml")
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                @*<a id="btnSubmit1" class="btn btn-success" data-toggle="modal">Submit</a>*@
                                                @if ((status == "Submitted" && (Model.ApproverId == userId || Model.RequesterId == userId)) || (status == "Withdrawn" && Model.RequesterId == userId) || (status == "Approved" && User.IsInRole("TGBS Banking")) || (status == "Accepted" && User.IsInRole("TGBS Banking")) || ((status == "Processed") && User.IsInRole("TGBS Banking")) || ((status == "Issued") && Model.RequesterId == userId) || ((status == "Draft" || status == "RejectedApprove" || status == "Declined") && Model.RequesterId == userId))
                                                {
                                                    @Html.HiddenFor(x => x.UserAction)
                                                    @Html.Partial("_ActionButton.cshtml")
                                                }
                                            </div>
                                            @*<a id="btnAddAccounting" class="btn btn-secondary ripple" data-toggle="modal" data-target="#add-accounting-table-modal">Add</a>*@

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End Form -->
                </div>
            </div>
            <!-- End Row -->
        </div>
        <!-- End Container -->
        <!-- Begin Page Footer-->
        <!-- End Page Footer -->
        <a href="#" class="go-top"><i class="la la-arrow-up"></i></a>
        <!-- Offcanvas Sidebar -->
        @*@Html.Partial("_Log.cshtml")*@
        <!-- End Offcanvas Sidebar -->
    </div>
}

@section Scripts{
    <!--  validation script *added by Hanif 08112019 -->

    <script src="~/assets/vendors/jsgrid-1.5.3/src/jsgrid.validation.js"></script>

    @*<script src="~/assets/vendors/js/datatables/datatables.min.js"></script>
        <script src="~/assets/vendors/js/datatables/dataTables.select.min.js"></script>
        <script src="~/assets/vendors/js/datatables/dataTables.buttons.min.js"></script>
        <script src="~/assets/vendors/js/datatables/buttons.flash.js"></script>
        <script src="~/assets/vendors/js/datatables/buttons.print.min.js"></script>
        <script src="~/assets/vendors/js/datatables/buttons.html5.js"></script>

        <script src="~/assets/vendors/js/tablefilter/jquery.tablefilter.js"></script>
        <script src="~/assets/vendors/js/tablefilter/jquery.tabledatafilter.min.js"></script>*@

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
    <script src="~/js/jquery.validate.js"></script>
    <script src="~/assets/js/components/wizard/form-wizard.min.js"></script>
    <script>

        var bdId = '@Model.Id';
        var wangHangusId = '@Model.WangHangusViewModel.Id';
        var region = '@Model.WangHangusViewModel.Region';
        var country = '@Model.WangHangusViewModel.Country';
        var countryBank = '@Model.WangHangusViewModel.BankCountry';
        var coCode = '@Model.WangHangusViewModel.CoCode';
        var vendorNo = '@Model.WangHangusViewModel.VendorNo';
        var sendingMethod = '@Model.SendMethod';
        var sendMethod;
        var vendorType = '@Model.WangHangusViewModel.VendorType';
        var userId = '@User.Identity.Name';
        var ba = '@Model.WangHangusViewModel.BusinessArea';
        var manager = '@User.IsInRole("Manager")';
        var divType = '@ViewBag.DivType';
        var jumlah = 0;
        var balance = parseFloat('@Model.WangHangusViewModel.Amount');
        var counts = 0;
        var existAttachment = 0;
        var executive = '@User.IsInRole("Executive")';
        var status = $("#Status").val();
        var existingAccount = 0;
        var hoz = '@User.IsInRole("Head of Zone")';
        var refNo = '@Model.RefNo';

        function refresh() {
            setTimeout(function () { location.reload(); }, 500);
        }

         function getApprover() {

              $.get("@Url.Action("GetAllWHApprover", "BankDraft")", {
                dataType: 'json'
            })
                .done(function (result) {
                    if (result != null) {
                        console.log(result[0].name);
                        SetSelectedValue(result[0].name, "#ddlApprover");
                        $("#ApproverId").val(result[0].id);
                    } else {

                    }
                })
        }

         function getApproverSpecialCase() {

              $.get("@Url.Action("GetAllWHApproverForManagerMore500k", "BankDraft")", {
                dataType: 'json'
            })
                .done(function (result) {
                    if (result != null) {
                        console.log(result[0].name);
                        SetSelectedValue(result[0].name, "#ddlApprover");
                        $("#ApproverId").val(result[0].id);
                    } else {

                    }
                })

        }

        $(document).ready(function () {
            

            SetSelectedValue('@ViewBag.ApproverId', "#ddlApprover");
            console.log(manager + balance + divType);

            $("[data-toggle=tooltip]").tooltip({ placement: 'right' });
            var db = {

                loadData: function (filter) {
                    return $.ajax({
                        url: "/BankDraftAction/GetBankDraftActionById?id=" + bdId,
                        type: "GET",
                        dataType: "JSON",
                        //data: function (d) {
                        //    d.id = bdId;
                        //}
                    })
                }

            };

            window.db = db;

            $("#jsGrid").jsGrid({
                width: "100%",
                filtering: false,
                editing: false,
                inserting: false,
                sorting: true,
                paging: false,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 2,
                //deleteConfirm: "Do you really want to delete the client?",
                controller: db,
                fields: [
                    { name: "actionRole", title: "Action Role", width: 150, readOnly: true },
                    { name: "byId", title: "Action By", type: "myDateField", width: 150, readOnly: true },
                    { name: "comment", title: "Comment", readOnly: true },
                    { name: "actionType", title: "Action Type", type: "text", width: 100, readOnly: true },
                    { name: "on", title: "Action Date", type: "text", width: 100, readOnly: true }
                    //{ type: "control", deleteButton: false, modeSwitchButton: false }
                ]
            }); var db = {

                loadData: function (filter) {
                    return $.ajax({
                        url: "/BankDraftAction/GetBankDraftActionById?id=" + bdId,
                        type: "GET",
                        dataType: "JSON",
                        //data: function (d) {
                        //    d.id = bdId;
                        //}
                    })
                }

            };

            window.db = db;

            $("#jsGrid").jsGrid({
                width: "100%",
                filtering: false,
                editing: false,
                inserting: false,
                sorting: true,
                paging: false,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 2,
                //deleteConfirm: "Do you really want to delete the client?",
                controller: db,
                fields: [
                    { name: "actionRole", title: "Action Role", width: 150, readOnly: true },
                    { name: "byId", title: "Action By", type: "myDateField", width: 150, readOnly: true },
                    { name: "comment", title: "Comment", readOnly: true },
                    { name: "actionType", title: "Action Type", type: "text", width: 100, readOnly: true },
                    { name: "on", title: "Action Date", type: "text", width: 100, readOnly: true }
                    //{ type: "control", deleteButton: false, modeSwitchButton: false }
                ]
            });

            $("nav").addClass("shrinked");
            //$("#toggle-btn").addClass("active");
            $(".brand-big").hide()
            $(".brand-small").hide();
            $("#submitGroupBtn").show();
            //$("td a i.ti-upload").show();
            $("td a i.la-chain").show();
            $("td a i.la-trash").show();
            $("td a i.la-download").show();
            $(".status-footer").hide();
            $(".after-submit").hide();

            if (ba == "") {
                $("#ddlBusinessArea").append("<option value=''>Please Select</option>");
            }
            else {
                SetSelectedValue(ba, "#ddlBusinessArea");
            }

            if (coCode == "") {
                $("#ddlCompanyCode").append("<option value=''>Please Select</option>");
            }
            else {
                SetSelectedValue(coCode, "#ddlCompanyCode");
            }

            if (region == "") {
                $("#ddlState").append("<option value=''>Please Select</option>");
            }
            else {
                SetSelectedValue(region, "#ddlState");
            }

            if (country == "") {
                $("#ddlCountry").append("<option value=''>Please Select</option>");
            }
            else {
                SetSelectedValue(country, "#ddlCountry");
            }

            if (vendorNo == "") {
                $("#ddlCountry").append("<option value=''>Please Select</option>");
            }
            else {
                SetSelectedValue(country, "#ddlCountry");
            }

            if (countryBank == "") {
                $("#ddlBankCountry").append("<option value=''>Please Select</option>");
            }
            else {
                SetSelectedValue(countryBank, "#ddlBankCountry");
            }

            if (sendingMethod == "") {
                SetSelectedValue("SelfCollect", "#ddlSendMethod");
            }
            else{
                SetSelectedValue(sendingMethod, "#ddlSendMethod");
                if (sendingMethod == "ByPos") {
                    $('#pnlPostageNo').show();
                }
            }


            //SetSelectedValue(vendorNo, "#ddlVendorNo");
            SetSelectedValue(sendingMethod, "#ddlSendMethod");

            SetSelectedValue(vendorType, "#ddlVendorType");

            $("#WangHangusViewModel.VendorType").val(vendorType);

            if (vendorType == "Registered") {
                $('#pnl_second_form').show();
                $('#pnl_main_form').hide();
            }

            var t = $('#suppDoc').DataTable({ searching: false, paging: false, info: false });

            console.log(status + "status");
            if (status == "Draft" || status == "Declined" || status == "RejectedApprove" || status == "Withdrawn" && '@Model.RequesterId' == userId) {
                $.ajax({
                    type: "GET",
                    url: "/WangHangus/GetSupportDocument?parentid=" + bdId + "&fileType=BankDraft&fileSubType=WHDocument",
                    success: function (data) {
                        existAttachment = data.length;
                        $.each(data, function (i, val) {
                            i = i + 1;
                            var link = "RemoveAttachment('" + val.id + "','WHDocument')";
                            t.row.add([
                                i,
                                'Attachment ' + i,
                                '<td class="td-actions"><input type="hidden" value="' + val.fileName + '" id="hdnWHDocument" /><a href="/../documents/"' + val.fileName +'">' + val.fileName + '</a></td>',
                                '<a onclick=' + link + ' id="dustbinId"><i class="la la-trash"></i></a>'
                            ]).draw(false);

                            counts = i;
                            counter1 = i;
                        });
                    }
                });
            }
            else {
                $.ajax({
                    type: "GET",
                    url: "/WangHangus/GetSupportDocument?parentid=" + bdId + "&fileType=BankDraft&fileSubType=WHDocument",
                    success: function (data) {
                        existAttachment = data.length;
                        $.each(data, function (i, val) {
                            i = i + 1;
                            var link = "RemoveAttachment('" + val.id + "','WHDocument')";
                            t.row.add([
                                i,
                                'Attachment ' + i,
                                '<td class="td-actions"><input type="hidden" value="' + val.fileName + '" id="hdnWHDocument" /><a href="/../documents/' + val.fileName +'">' + val.fileName + '</a></td>',
                                '<a onclick=' + link + ' id="dustbinId"></a>'
                            ]).draw(false);

                            counts = i;
                            counter1 = i;
                        });
                    }
                });
            }

            counter2 = 0;
            $('#addRow').on('click', function () {
                counts++;

                t.row.add([
                    counts,
                    'Attachment ' + counts,
                    '<td class="td-actions"><div class="file-upload before-submit"><input id="otherDoc' + counter2 + 'Id" name="doc" type="file"></div></td>',
                    '<a id="dustbinId2"><i class="la la-trash"></i></a>'
                ]).draw(false);

                counter2++;
            });

            $('#suppDoc tbody').on('click', '#dustbinId', function () {
                t
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();
                counts--;
                counter1--;
            });

            $('#suppDoc tbody').on('click', '#dustbinId2', function () {
                t
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();
                counts--;
                counter2--;
            });

            //// Automatically add a first row of data
            $('#addRow').click();
            $('#dustbinId').click();
            $('#dustbinId2').click();

            $("#ddlState").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllState",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlState').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                   region = data.text;

                }
            });

            $("#ddlCountry").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllCountry",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlCountry').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    country = data.text;

                }
            });

            $("#ddlVendorNo").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllVendorNo",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });


            $("#ddlVendorType").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllVendorType",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlVendorType').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    //var id = data.id;
                    vendorType = data.text;
                    //SetSelectedValue(vendorType, "#ddlVendorType");
                    if (vendorType == "Registered") {
                        $('#pnl_second_form').show();
                        $('#pnl_main_form').hide();
                        //$("#VendorType").val("Registered");
                        $("#WangHangusViewModel.VendorType").val("Registered");
                        vendorType = "Registered";
                    }
                    else if (vendorType == "OneTime"){
                        $('#pnl_main_form').show();
                        $('#pnl_second_form').hide();
                        //$("#VendorType").val("OneTime");
                        $("#WangHangusViewModel.VendorType").val("OneTime");
                        vendorType = "OneTime";
                    }
                }
            });

            $("#ddlBankCountry").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllCountry",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlBankCountry').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    countryBank = data.text;

                }
            });

            $("#ddlCompanyCode").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllCompanyCode",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlCompanyCode').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    coCode = data.text;

                }
            });

            $("#ddlSendMethod").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllSendMethod",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });

               $("#ddlBusinessArea").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllBusinessArea",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlBusinessArea').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    ba = data.text;

                }
            });

            $('#ddlSendMethod').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    sendMethod = data.text;
                    if (sendMethod == "ByPos") {
                        $('#pnlPostageNo').show();
                    }
                    else {
                        $('#pnlPostageNo').hide();
                    }
                }
            });

            if (status != "Draft") {

                $("#submitGroupBtn").hide();
                $(".before-submit").hide();
                $(".after-submit").show();
                $("#jsGrid1").css("pointer-events", "none");
                $("input[type=text], input[type=email], input[type=checkbox], input[type=date], select, textarea, .submission, input[type=file]").attr("disabled", "disabled");
                $(".txaComment").removeAttr('disabled');
                $("#addRow").hide();

                //$("#jsGrid1").jsGrid("fieldOption", "control", "visible", false);
                //$("#jsGrid1").jsGrid("option", "editing", false)


                if (status == "Declined" || status == "RejectedApprove") {

                    if ('@Model.RequesterId' == userId) {
                        $("#stsRejected").show();
                        $("#submitGroupBtn").show();
                        $(".before-submit").show();
                        $(".after-submit").hide();
                        $("#btnDraft").hide();
                        $("#addRow").show();
                        $("#jsGrid1").removeAttr('style');
                        $("input[type=text], input[type=checkbox],input[type=email], input[type=date], select, textarea, .submission").removeAttr('disabled');
                    }

                }


                if (status == "Withdrawn") {

                    if ('@Model.RequesterId' == userId) {
                        $("#stsWithdrawn").show();
                        $("#submitGroupBtn").show();
                        $(".before-submit").show();
                        $(".after-submit").hide();
                        $("#btnDraft").hide();
                        $("#addRow").show();
                        $("#jsGrid1").removeAttr('style');
                        $("input[type=text], input[type=checkbox],input[type=email], input[type=date], select, textarea, .submission").removeAttr('disabled');
                    }

                }

                if (status == "Submitted") {
                    $("#stsSubmitted").show();
                    if ('@Model.RequesterId' == userId) {
                        $("#withdrawGroupBtn").show();
                    }
                    else {
                        $("#approveGroupBtn").show();
                    }
                    $("#tab-1 #txtComment").removeAttr('disabled');
                    $("#li-2").click();
                }
                else if (status == "Approved") {
                    $("#stsApproved").show();
                    $("#acceptGroupBtn").show();
                    $("#tab-1 #txtComment").removeAttr('disabled');
                    $("#li-4").click();

                    if ('@User.IsInRole("TGBS Banking")' == 'True') {
                        $("#ermsNoId").removeAttr('disabled');
                        $("#ermsNoId").attr("required", "required");
                        $("#lblErmsNo").append("<span class='text-danger ml-2'>*</span>");
                    }
                }
                else if (status == "Accepted") {
                    $("#stsAccepted").show();
                    $("#processGroupBtn").show();
                    $("#li-5").click();
                    $("#tab-2 input, #tab-2 select, #tab-2 textarea").removeAttr('disabled');

                    $.ajax({
                        type: "GET",
                        url: "/InstructionLetter/GetInstructionLetter?refNo=" + $("#InstructionLetterRefNo").val(),
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            if (data.processingType == "Bulk") {
                                //ShowNoty("error", "This application's Instruction letter is processed through Bulk-Processing, please attach the Signed Letter in the particular letter here!");
                                $("#SignedLetterVM_File").attr('disabled', 'disabled');
                                ShowNoty("error", "This application's Instruction letter is processed through Bulk-Processing, please attach the Signed Letter in Bulk Processing");
                                //$("#lblLetter").append("<i class='ti-info-alt' data-toggle='tooltip' title='This application's Instruction letter is processed through Bulk-Processing, please attach the Signed Letter in the particular letter here></i>");
                            }
                            //console.log(data);
                        }
                    });
                }
                else if (status == "Processed") {
                    $("#stsProcessed").show();
                    $("#issueGroupBtn").show();
                    $(".before-process").hide();
                    $("#li-6").click();
                    $("#tab-3 input, #tab-3 select, #tab-3 textarea").removeAttr('disabled');

                    $.ajax({
                        type: "GET",
                        url: "/CoverMemo/GetCoverMemoForBulk?refNo=" + refNo,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            if (data.referenceNo.includes(',')) {
                                $("#SignedMemoVM_File").attr('disabled', 'disabled');
                                ShowNoty("error", "This application's Memo is processed through Bulk-Processing, please attach the Signed Covering Memo in the particular Memo in Bulk Processing");
                            }
                            //console.log(data);
                        }
                    });
                }
                else if (status == "Issued") {
                    if ('@Model.RequesterId' == userId) {
                        $("#tab-4 input, #tab-4 select, #tab-4 textarea").removeAttr('disabled');
                    }     
                    $("#stsIssued").show();
                    $("#completeGroupBtn").show();
                    $(".before-process").hide();
                    $(".before-issue").hide();
                    $("#li-7").click();
                }
                else if (status == "Complete") {
                    $("#stsCompleted").show();
                    $(".before-process").hide();
                    $(".before-issue").hide();
                    $(".before-complete").hide();
                    $("#li-8").click();
                }
            }

            var ilrn = $("#InstructionLetterRefNo").val();
            if (ilrn !== "") {
                $("#InstructionLetterRefNo").attr("disabled", "disabled");
                $("#btnNewLetter").hide();
                $("#btnViewLetter").show();
                $("#btnEditLetter").show();
            }

            var cmrn = $("#CoverMemoRefNo").val();
            if (cmrn !== "") {
                $("#CoverMemoRefNo").attr("disabled", "disabled");
                $("#btnNewMemo").hide();
                $("#btnViewMemo").show();
                $("#btnEditMemo").show();
            }

            $("#InstructionLetterRefNo").blur(function (e) {
                $.ajax({
                    type: "POST",
                    url: "/InstructionLetter/SetBDInstructionLetter?LetterRefNo=" + $(this).val() + "&bdRefNo=" + $("#hdnRefNo").val(),
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.response.statusCode == 200) {
                            ShowNoty("success", data.message);
                            $("#InstructionLetterRefNo").attr("disabled", "disabled");
                            $("#btnNewLetter").hide();
                            $("#btnViewLetter").show();
                            $("#btnEditLetter").show();
                        } else {
                            ShowNoty("error", data.message);
                        }
                    }
                });
            });
            $("#CoverMemoRefNo").blur(function (e) {
                $.ajax({
                    type: "POST",
                    url: "/CoverMemo/SetBDCoverMemo?CoverMemoRefNo=" + $(this).val() + "&bdRefNo=" + $("#hdnRefNo").val(),
                    processData: false,
                    contentType: false,
                    success: function (data) {
                        if (data.response.statusCode == 200) {
                            ShowNoty("success", data.message);
                            $("#CoverMemoRefNo").attr("disabled", "disabled");
                            $("#btnNewMemo").hide();
                            $("#btnViewMemo").show();
                            $("#btnEditMemo").show();
                        } else {
                            ShowNoty("error", data.message);
                        }
                    }
                });
            });

            $.ajax({
                type: "GET",
                url: "/AccountingTable/GetAllAccountingTableByWangHangusId?Id=" + wangHangusId,
                success: function (data) {
                    existingAccount = data.length;
                    console.log(existingAccount + 'tudia');
                }
            });

        var db = {

                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "/AccountingTable/GetAllAccountingTableByWangHangusId?Id=" + wangHangusId,
                        dataType: "JSON",
                        data: filter

                    });

                    //existingAccount = data.length;
                    //console.log(existingAccount);
                },

                insertItem: function (insertingClient) {
                    //this.clients.push(insertingClient);

                    $('#listAccounting').val($('#listAccounting').val() + JSON.stringify(insertingClient));
                    console.log($('#listAccounting').val());
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: "/AccountingTable/Insert?wangId=" + wangHangusId + "&model=" + JSON.stringify(insertingClient),
                        data: JSON.stringify(insertingClient),
                        success: function (data) {
                            if (data.response.statusCode == 200) {
                                ShowNoty("success", data.message);
                            } else {
                                ShowNoty("error", data.message);
                            }
                        },
                        failure: function (response) {
                            ShowNoty("error", response);
                        }
                    });
                },

                updateItem: function (d) {

                    $('#listAccounting').val(JSON.stringify(this.clients));
                    console.log($('#listAccounting').val());
                    console.log(JSON.stringify(d));
                    $.ajax({
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        type: 'POST',
                        url: "/AccountingTable/Update?model=" + JSON.stringify(d),
                        data: JSON.stringify(d),
                        success: function (data) {
                            if (data.response.statusCode == 200) {
                                ShowNoty("success", data.message);
                            } else {
                                ShowNoty("error", data.message);
                            }
                        },
                        failure: function (response) {
                            ShowNoty("error", response);
                        }
                    });

                },

                deleteItem: function (deletingClient) {

                    var clientIndex = $.inArray(deletingClient, this.clients);
                    this.clients.splice(clientIndex, 1);
                    $('#listAccounting').val(JSON.stringify(this.clients));
                    console.log($('#listAccounting').val());

                    return $.ajax({
                        type: "DELETE",
                        dataType: 'json',
                        url: "/AccountingTable/Delete?id=" + deletingClient.id,
                        data: deletingClient,
                        success: function (data) {
                            if (data.response.statusCode == 200) {
                                ShowNoty("success", data.message);
                            } else {
                                ShowNoty("error", data.message);
                            }
                        },
                        failure: function (response) {
                            ShowNoty("error", response);
                        }
                    });
                }

            };
            window.db = db;

            db.DrCr = [
                { Name: "", Id: "" },
                { Name: "DR", Id: "DR" },
                { Name: "CR", Id: "CR" }
            ];

            db.CONW = [
                { Name: "", Id: "" },
                { Name: "C", Id: "C" },
                { Name: "O", Id: "O" },
                { Name: "N", Id: "N" },
                { Name: "W", Id: "W" }
            ];

            db.Currency = [
                { Name: "", Id: "" },
            ];

            db.clients = [
                {
                    "drCr": "",
                    "glAccount": "",
                    "conw": "",
                    //"conwNo": "",
                    "costObject": "",
                    "taxCode": "",
                    "currency": "",
                    "taxAmount": "",
                    "amount": ""
                }
            ];

            function MoneyField(config) {
                jsGrid.NumberField.call(this, config);
            }

            function formatNumberForDisplay(numberToFormat) {
                var formatter = new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD',
                    digits: 2,
                });

                return formatter.format(numberToFormat).substr(1);
            }



            MoneyField.prototype = new jsGrid.NumberField({

                itemTemplate: function (value) {
                    return formatNumberForDisplay(value);
                    //return formatter.format(numberToFormat).substr(1);
                },

                filterValue: function () {
                    return parseFloat(this.filterControl.val() || 0);
                },

                insertValue: function () {
                    return parseFloat(this.insertControl.val() || 0);
                },

                editValue: function () {
                    return parseFloat(this.editControl.val() || 0);
                }

            });

            jsGrid.fields.money = MoneyField;

            $("#jsGrid1").jsGrid({
                width: "100%",
                filtering: false,
                editing: true,
                inserting: true,
                sorting: true,
                paging: true,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 2,
                deleteConfirm: "Do you really want to delete this row?",
                controller: db,
                data: db.clients,

                onRefreshed: function (args) {
                    var items = args.grid.option("data");
                    var total = { "taxAmount": 0, "amount": 0, "total": 0,IsTotal: true };

                    items.forEach(function (item) {

                        if (item.drCr == "CR") {
                            total.amount += -item.amount;
                            total.taxAmount += -item.taxAmount;
                            total.total += -(item.amount + item.taxAmount);
                        }
                        else {
                            total.amount += +item.amount;
                            total.taxAmount += +item.taxAmount;
                            total.total += item.amount + item.taxAmount;
                        }
                    });

                    jumlah = total.amount + total.taxAmount;
                    //var currTotal = jumlah.total;
                    $("#lblTotalAmount").empty();
                    $("#lblTotalAmount").append("<b>Total Amount(include Tax): RM " + parseFloat(jumlah).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,') + "</b>");
                    console.log(jumlah.total);
                    console.log(manager);
                    console.log(divType);
                    $('#ddlApprover').empty();

                 if (manager == 'True' && jumlah > 500000 && divType == 1) {
                getApproverSpecialCase();

                $("#ddlApprover").select2({
                    minimumResultsForSearch: -1,
                    ajax: {
                        url: "/BankDraft/GetAllWHApproverForManagerMore500k",
                        dataType: 'json',
                        type: "GET",
                        processResults: function (data) {
                            return {
                                results: $.map(data, function (item) {
                                    return {
                                        text: item.name,
                                        id: item.id
                                    }

                                })
                            };
                        }
                    }
                });

                $('#ddlApprover').on('select2:select', function (e) {
                    var data = e.params.data;
                    if (data.selected) {
                        var id = data.id;
                        $("#ApproverId").val(id);
                    }
                });
            }
            else {
                getApprover();

                $("#ddlApprover").select2({
                    minimumResultsForSearch: -1,
                    ajax: {
                        url: "/BankDraft/GetAllWHApprover",
                        dataType: 'json',
                        type: "GET",
                        processResults: function (data) {
                            return {
                                results: $.map(data, function (item) {
                                    return {
                                        text: item.name,
                                        id: item.id
                                    }

                                })
                            };
                        }
                    }
                });

                $('#ddlApprover').on('select2:select', function (e) {
                    var data = e.params.data;
                    if (data.selected) {
                        var id = data.id;
                        $("#ApproverId").val(id);
                    }
                });
            }
                    var $totalRow = $("<tr>").addClass("total-row");

                    args.grid._renderCells($totalRow, total);

                    args.grid._content.append($totalRow);
                },

                onItemUpdated: function (args) {
                    $("#jsGrid1").jsGrid("refresh");
                },

                fields: [
                    { name: "drCr", title: "DR/CR", type: "select", items: db.DrCr, valueField: "Id", textField: "Name", validate: "required" },
                    { name: "glAccount", title: "GL Account", type: "text", width: 100, validate: "required" },
                    { name: "conw", title: "C/O/N/W", type: "select", items: db.CONW, valueField: "Id", textField: "Name", validate: "required" },
                    //{ name: "conwNo", title: "C/O/N/W No.", type: "text", width: 100, validate: "required" },
                    { name: "costObject", title: "Cost Object", type: "text", width: 100, validate: "required" },
                    { name: "taxCode", title: "Tax Code", type: "text", width: 100 },
                    { name: "currency", title: "Currency", type: "text", textField: "Name", validate: "required", readOnly: true,
                        insertTemplate: function () {
                            var input = this.__proto__.insertTemplate.call(this);

                            input.val('MYR')

                            return input;
                        }
                    },
                    {
                        name: "taxAmount", title: "Tax Amount (RM)", type: "money", width: 100,
                        itemTemplate: function (val, item) {
                            if (val != null && val != "" && item.drCr == "CR")
                                return "(" + val + ")";
                            else
                                return val;
                        },
                    },
                    {
                        name: "amount", title: "Amount (RM)", type: "money", width: 100, validate: { message: "Tax Amount should be more than 0", validator: function (value) { return value > 0; } },
                        itemTemplate: function (val, item) {
                            if (val != null && val != "" && item.drCr == "CR")
                                return "(" + val + ")";
                            else
                                return val;
                        },
                    },
                    {
                        name: "control", type: "control", modeSwitchButton: true,
                        itemTemplate: function (_, item) {
                            if (item.IsTotal)
                                return "";
                            return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                        }
                    }
                ]


            });


            if (status != "Draft") {
                $("#jsGrid1").jsGrid("fieldOption", "control", "visible", false);
                if (status == "Declined" || status == "RejectedApprove" || status == "Withdrawn") {

                    if ('@Model.RequesterId' == userId) {
                        $("#jsGrid1").jsGrid("fieldOption", "control", "visible", true);
                    }

                }
            }
        });

        $('#btnEditLetter').click(function (event) {
            event.preventDefault();
            window.open("/InstructionLetter/Edit?LetterRefNo=" + $("#InstructionLetterRefNo").val(), "popupWindow", "width=600,height=600,scrollbars=yes");
        });
        $('#btnNewLetter').click(function (event) {
            event.preventDefault();

            window.open("/InstructionLetter/Create?RefNo=" + $("#RefNo").val(), "popupWindow", "width=600,height=600,scrollbars=yes");
          

        });
        $('#btnViewLetter').click(function (event) {
            event.preventDefault();
            window.open("/InstructionLetter/Letter?LetterRefNo=" + $("#InstructionLetterRefNo").val(), "popupWindow", "width=600,height=600,scrollbars=yes");
        });

        function RemoveAttachment(id) {
            ShowNoty("warning", "Deleting Attachment..");
            $.ajax({
                type: "GET",
                url: "/BankDraft/RemoveAttachment/" + id,
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.response.statusCode == 200) {
                        //$('#hdnWCSuratKelulusan').val("");
                        //$('#noFile-' + type).show();
                        //$('#hasFile-' + type).hide();
                        ShowNoty("success", data.message);
                        refresh();
                    } else {
                        ShowNoty("error", data.message);
                        refresh();

                    }
                }
            });
        }

        $('#btnEditMemo').click(function (event) {
            event.preventDefault();
            window.open("/CoverMemo/Edit?CoverMemoRefNo=" + $("#CoverMemoRefNo").val(), "popupWindow", "width=600,height=600,scrollbars=yes");
        });
        $('#btnNewMemo').click(function (event) {
            event.preventDefault();
            window.open("/CoverMemo/Create?RefNo=" + $("#RefNo").val(), "popupWindow", "width=600,height=600,scrollbars=yes");

            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "@Url.Action("UpdateBankIssue", "BankDraft")",
                data: refNo + "," + "" + "," + $('#BankDrafNoIssued').val() + "," + sendMethod + "," + $('#PostageNo').val() + "," + $('#ReceiverContactNo').val() + "," + $('#BankDraftDate').val(),
                success: function (data) {
                    if (data.response.statusCode == 200) {
                        //ShowNoty("success", data.message);
                    } else {
                        ShowNoty("error", data.message);
                    }
                },
                failure: function (response) {
                    ShowNoty("error", response);
                }
            }) 
        });
        $('#btnViewMemo').click(function (event) {
            event.preventDefault();
            window.open("/CoverMemo/Memo?CoverMemoRefNo=" + $("#CoverMemoRefNo").val(), "popupWindow", "width=600,height=600,scrollbars=yes");
        });

        $("#btnDraft").on('click', function (e) {
            $("#Status").val("Draft");
            $("#formEditApplication").submit();
        });
        //$("#btnSubmit").on('click', function (e) {
        //    $("#Status").val("Submit");
        //    $("#formCreateApplication").submit();
        //});
        $("#btnSubmitConfirm").on('click', function (e) {
            console.log($('#listAccounting').val());
            var totalAmount = jumlah;

            var file = null;
            var fileInput = $('#otherDoc0Id')[0];
            if (fileInput != null) {
                file = fileInput.files[0];
            }

            if (executive == 'True' && divType == 1) {

                if (totalAmount > 500000) {
                    ShowNoty("error", "Not authoritive to apply wang hangus that exceed amount of RM500,000..");
                }
                else if (totalAmount <= 500000) {
                    if ($("#formEditApplication").valid()) {
                        if ($('#listAccounting').val() == "" && existingAccount == 0) {
                            ShowNoty("error", "Please fill accounting table!");
                        }
                        else if (file == null && existAttachment == 0) {
                            ShowNoty("error", "Supporting Document Required!!");
                        }
                        else {
                            $("#Status").val("Submit");
                            $("#formEditApplication").submit();
                        }
                    }
                    else {
                        ShowNoty("error", "Please fill all required fields!");
                    }
                }


            }
            else if (hoz == 'True' && divType == 1) {

                if (totalAmount <= 500000) {
                    ShowNoty("error", "Not authoritive to apply wang hangus that has less amount than RM500,000..");
                }
                else if (totalAmount > 500000) {
                    if ($("#formCreateApplication").valid()) {
                        if ($('#listAccounting').val() == "" && existingAccount == 0) {
                            ShowNoty("error", "Please fill accounting table!");
                        }
                        else if (file == null && existAttachment == 0) {
                            ShowNoty("error", "Supporting Document Required!!");
                        }
                        else {
                            $("#Status").val("Submit");
                            $("#formCreateApplication").submit();
                        }
                    }
                    else {
                        ShowNoty("error", "Please fill all required fields!");
                    }
                }

            }
            else {

                if ($("#formEditApplication").valid()) {
                    if ($('#listAccounting').val() == "" && existingAccount == 0) {
                        ShowNoty("error", "Please fill accounting table!");
                    }
                    else if (counter2 == 0 && existAttachment == 0) {
                        ShowNoty("error", "Supporting Document Required!!");
                    }
                    else {
                        $("#Status").val("Submit");
                        $("#formEditApplication").submit();
                    }
                }
                else {
                    ShowNoty("error", "Please fill all required fields!");
                }

            }

        });

        $('#btnWithdrawConfirm').on('click', function (e) {
            $("#UserAction").val("Withdrawn");
            $("#formNextAction").submit();
        });

        $('#btnVerify').on('click', function (e) {

            if ($("#formNextAction").valid()) {
                $("#UserAction").val("Verify");
                $("#formNextAction").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });

        //Added by Hanif for validation
        $("#btnApprove").on('click', function (e) {
            if ($("#formNextAction").valid()) {
                $("#UserAction").val("Approve");
                $("#formNextAction").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });

        $('#btnRejectVerify').on('click', function (e) {
            if ($("#formNextAction").valid()) {
                $("#UserAction").val("RejectVerify");
                $("#formNextAction").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });
        $('#btnRejectApprove').on('click', function (e) {
            if ($("#formNextAction").valid()) {
                $("#UserAction").val("RejectApprove");
                $("#formNextAction").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });
        $('#btnAccept').on('click', function (e) {

            var valid1 = $("#ermsNoId").valid();
            var valid2 = $("#formNextAction").valid();
            if (valid1 && valid2) {
                $("#UserAction").val("Accept");
                $("#formNextAction").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }s
        });
        $('#btnDeclined').on('click', function (e) {
            if ($("#formNextAction").valid()) {
                $("#UserAction").val("Decline");
                $("#formNextAction").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });
        $('#btnSaveLetter').on('click', function (e) {
            $("#UserAction").val("SaveLetter");
            $("#formSaveBankDetails").submit();
        });
        $('#btnSubmitToBank').on('click', function (e) {
            $("#UserAction").val("SubmitToBank");
            $("#formSaveBankDetails").submit();
        });
        $('#btnSaveMemo').on('click', function (e) {
            $("#UserAction").val("SaveMemo");
            $("#formSaveBankIssue").submit();
        });
        $('#btnSubmitToRequestor').on('click', function (e) {
            if ($("#formSaveBankIssue").valid()) {
                $("#UserAction").val("SubmitToRequestor");
                $("#formSaveBankIssue").submit();
            }
            else {
                    ShowNoty("error", "Please fill all required fields!");
                }
        });
        $('#btnSaveComplete').on('click', function (e) {
            $("#UserAction").val("SaveComplete");
            $("#formSaveBankAcceptance").submit();
        });
        $('#btnComplete').on('click', function (e) {
            if ($("#formSaveBankAcceptance").valid()) {
                $("#UserAction").val("Complete");
                $("#formSaveBankAcceptance").submit();
            }
            else {
                ShowNoty("error", "Please fill all required fields!");
            }
        });


        $("#formEditApplication").submit(function (e) {

            e.preventDefault(); // avoid to execute the actual submit of the form.

            ShowNoty("warning", "Saving Bank Draft..");

            var form = $(this);
            var url = form.attr('action');
            var fdata = new FormData();

            //// You can update the jquery selector to use a css class if you want
            $("input[type='text'], input[type='hidden']").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            // You can update the jquery selector to use a css class if you want
            $("input, textarea").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            for (var i = 0; i < counter2; i++) {
                var fileInput = $('#otherDoc' + i + 'Id')[0];
                var file = fileInput.files[0];
                fdata.append("WHFile", file);
            }

            fdata.append("WangHangusViewModel.Region", region);
            fdata.append("WangHangusViewModel.Country", country);
            fdata.append("WangHangusViewModel.BankCountry", countryBank);
            fdata.append("WangHangusViewModel.CoCode", coCode);
            fdata.append("WangHangusViewModel.BusinessArea", ba);
            fdata.append("WangHangusViewModel.SendMethod", sendMethod);

            for (var value of fdata.values()) {
                console.log(value);
            }
            for (var key of fdata.keys()) {
                console.log(key);
            }

            $.ajax({
                type: "POST",
                url: url,
                data: fdata, //form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        href = "/Application/MyApplication";
                        setTimeout(function () {
                            window.location.href = href;
                        }, 1000);
                    } else {
                        ShowNoty("error", data.message);
                    }
                }
            });
        });
        $("#formNextAction").submit(function (e) {

            e.preventDefault(); // avoid to execute the actual submit of the form.
            ShowNoty("warning", "Updating Application..");

            var form = $(this);
            var url = form.attr('action');
            var fdata = new FormData();
            $("input, textarea").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            $.ajax({
                type: "POST",
                url: url,
                data: fdata, //form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        if($("#UserAction").val() == "Withdrawn")
                        {
                            href = "/Application/MyApplication";
                        }
                        else {
                            href = "/Application/ManageApplication";
                        }
                        
                        setTimeout(function () {
                            window.location.href = href;
                        }, 1000);
                    } else {
                        ShowNoty("error", data.message);
                        //refresh();
                    }
                }
            });
        });
        $("#formSaveBankDetails").submit(function (e) {

            e.preventDefault(); // avoid to execute the actual submit of the form.

            ShowNoty("warning", "Saving Bank Draft..");

            var form = $(this);
            var url = form.attr('action');
            var fdata = new FormData();

            if ($('#SignedLetterVM_File').get(0).files.length !== 0) {
                var fileInput = $('#SignedLetterVM_File')[0];
                var file = fileInput.files[0];
                fdata.append("SignedLetter", file);
            }

            // You can update the jquery selector to use a css class if you want
            $("input, select, textarea").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            $.ajax({
                type: "POST",
                url: url,
                data: fdata, //form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        href = "/Application/ManageApplication";
                        setTimeout(function () {
                            window.location.href = href;
                        }, 1000);
                    } else {
                        ShowNoty("error", data.message);
                        //refresh();
                    }
                }
            });
        });
        $("#formSaveBankIssue").submit(function (e) {

            e.preventDefault(); // avoid to execute the actual submit of the form.

            ShowNoty("warning", "Saving Bank Draft..");

            var form = $(this);
            var url = form.attr('action');
            var fdata = new FormData();

            if ($('#SignedMemoVM_File').get(0).files.length !== 0) {
                var fileInput = $('#SignedMemoVM_File')[0];
                var file = fileInput.files[0];
                fdata.append("SignedMemo", file);
            }
            fdata.append("SendMethod", sendMethod);
            // You can update the jquery selector to use a css class if you want
            $("input, textarea").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });
            $.ajax({
                type: "POST",
                url: url,
                data: fdata, //form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        href = "/Application/ManageApplication";
                        setTimeout(function () {
                            window.location.href = href;
                        }, 1000);
                    } else {
                        ShowNoty("error", data.message);
                        //refresh();
                    }
                }
            });
        });
        $("#formSaveBankAcceptance").submit(function (e) {

            e.preventDefault(); // avoid to execute the actual submit of the form.

            ShowNoty("warning", "Saving Bank Draft..");

            var form = $(this);
            var url = form.attr('action');
            var fdata = new FormData();

            if ($('#EvidenceVM_File').get(0).files.length !== 0) {
                var fileInput = $('#EvidenceVM_File')[0];
                var file = fileInput.files[0];
                fdata.append("Evidence", file);
            }

            // You can update the jquery selector to use a css class if you want
            $("input, select, textarea").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            $.ajax({
                type: "POST",
                url: url,
                data: fdata, //form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        href = "/Application/MyApplication";
                        setTimeout(function () {
                            window.location.href = href;
                        }, 1000);
                    } else {
                        ShowNoty("error", data.message);

                    }
                }
            });
        });

    </script>
    @*<script src="~/assets/js/components/wizard/form-wizard.min.js"></script>
        <script src="~/assets/vendors/js/bootstrap-select/bootstrap-select.min.js"></script>*@
}


