@model BDA.ViewModel.BankDraftViewModel
@{
    ViewData["Title"] = "Apply Wang Cagaran";
}


@section Styles  {

    <!-- Tweaks for older IEs-->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script><![endif]-->

    <link rel="stylesheet" href="~/assets/css/bootstrap-select/bootstrap-select.min.css">
    <style>
    </style>
}
@{
    <div class="content-inner active">
        <div class="container-fluid">
            <!-- Begin Page Header-->
            <div class="row">
                <div class="page-header">
                    <div class="d-flex align-items-center">
                        <h2 class="page-header-title">Permohonan Deraf Bank <span> - Wang Hangus</span></h2>
                        <div>
                            <ul class="breadcrumb">
                                <li class="breadcrumb-item"><a href="db-default.html"><i class="ti ti-home"></i></a></li>
                                <li class="breadcrumb-item"><a href="#">New Application</a></li>
                                <li class="breadcrumb-item active">Wang Hangus</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Page Header -->
            <div class="row flex-row">
                <div class="col-xl-12">
                    <!-- Form -->
                    <div class="widget has-shadow">
                        @*<div class="widget-header bordered no-actions d-flex align-items-center">
                                <h4>Wang Cagaran</h4>
                            </div>*@
                        <div class="widget-body">
                            <div class="row flex-row justify-content-center">
                                <div class="col-xl-12">
                                    <div id="rootwizard">
                                        @Html.Partial("_StatusBar.cshtml")
                                        <div class="tab-content" style="font-family: Arial">

                                            <div class="body-content">
                                                <div>
                                                    @*style="text-align:center; border-bottom: 2px solid; border-bottom-color:blue"*@
                                                    @*<h4>Submitted by: En. Requestor</h4>*@
                                                    <br>
                                                </div>

                                                <div class="widget has-shadow">
                                                    <div class="widget-body sliding-tabs">
                                                        <ul class="nav nav-tabs form-tab" id="ul-form-tab" role="tablist">
                                                            <li class="nav-item">
                                                                <a class="nav-link active" id="base-tab-1" data-toggle="tab" href="#tab-1" role="tab" aria-controls="tab-1" aria-selected="true">Main Application</a>
                                                            </li>
                                                            <li class="nav-item">
                                                                <a class="nav-link disabled" id="base-tab-2" data-toggle="tab" href="#tab-2" role="tab" aria-controls="tab-2" aria-selected="false">Bank Details</a>
                                                            </li>
                                                            <li class="nav-item">
                                                                <a class="nav-link disabled" id="base-tab-3" data-toggle="tab" href="#tab-3" role="tab" aria-controls="tab-3" aria-selected="false">Bank Draft Issued</a>
                                                            </li>
                                                            <li class="nav-item">
                                                                <a class="nav-link disabled" id="base-tab-4" data-toggle="tab" href="#tab-4" role="tab" aria-controls="tab-4" aria-selected="false">Bank Draft Acceptance</a>
                                                            </li>
                                                            @*<li class="nav-item pull-right">
                                                                    <a class="nav-link" id="base-tab-5" data-toggle="tab" href="#tab-5" role="tab" aria-controls="tab-5" aria-selected="false">Action History</a>
                                                                </li>*@
                                                        </ul>
                                                        <div class="tab-content pt-3">
                                                            <div class="tab-pane fade active show" id="tab-1" role="tabpanel" aria-labelledby="base-tab-1">
                                                                @using (Html.BeginForm("CreateForm", "WangHangus", Model, FormMethod.Post, false, new { @id = "formCreateApplication", @class = "form-horizontal needs-validation", @novalidate = "novalidate", enctype = "multipart/form-data" }))
                                                                {
                                                                    @Html.AntiForgeryToken()
                                                                    @Html.HiddenFor(x => x.Status)
                                                                    @Html.Partial("_MainForm.cshtml")
                                                                    @Html.Partial("_Document.cshtml")
                                                                    @Html.Partial("_AccTable.cshtml")
                                                                    @Html.HiddenFor(x => x.WangHangusViewModel.Accounts, new { id = "listAccounting" });
                                                                    @Html.Partial("_ApproverList.cshtml")
                                                                    @Html.Partial("_Comment.cshtml")
                                                                    @*<input type="hidden" id="listAccounting" />*@
                                                                }
                                                            </div>
                                                            @*<button id='btnAdd' for-table='#accountingTable' class="btn btn-secondary ripple">Add Row</button>*@
                                                            <div class="tab-pane fade" id="tab-2" role="tabpanel" aria-labelledby="base-tab-2">

                                                            </div>
                                                            <div class="tab-pane fade" id="tab-3" role="tabpanel" aria-labelledby="base-tab-3">

                                                            </div>
                                                            <div class="tab-pane fade" id="tab-4" role="tabpanel" aria-labelledby="base-tab-4">

                                                            </div>
                                                            <div class="tab-pane fade" id="tab-5" role="tabpanel" aria-labelledby="base-tab-5">
                                                                @*@Html.Partial("_ActionHistory.cshtml")*@
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                @*<a id="btnSubmit1" class="btn btn-success" data-toggle="modal">Submit</a>*@
                                                @Html.Partial("_ActionButton.cshtml")
                                            </div>
                                            @*<a id="btnAddAccounting" class="btn btn-secondary ripple" data-toggle="modal" data-target="#add-accounting-table-modal">Add</a>*@

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End Form -->
                </div>
            </div>
            <!-- End Row -->
        </div>
        <!-- End Container -->
        <!-- Begin Page Footer-->
        <!-- End Page Footer -->
        <a href="#" class="go-top"><i class="la la-arrow-up"></i></a>
        <!-- Offcanvas Sidebar -->
        @*@Html.Partial("_Log.cshtml")*@
        <!-- End Offcanvas Sidebar -->
    </div>
}

@section Scripts{
    @*Validation script*@
    <!--  validation script  -->
    <script src="~/assets/vendors/jsgrid-1.5.3/src/jsgrid.validation.js"></script>

    <script src="~/js/jquery.validate.js"></script>
    <script src="~/js/jquery.dataTables2.min.js"></script>
    @*<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>*@
    @*added by Hanif 08112019*@
    <script>

        var vendorType;
         var region;
        var country;
        var companyCode;
        var countryBank;
        var vendorNo;
        var executive = '@User.IsInRole("Executive")';
        var hoz = '@User.IsInRole("Head of Zone")';
        var manager = '@User.IsInRole("Manager")';
        var divType = '@ViewBag.DivType ';
        var jumlah = 0;

        function getApprover() {

              $.get("@Url.Action("GetAllWHApprover", "BankDraft")", {
                dataType: 'json'
            })
                .done(function (result) {
                    if (result != null) {
                        console.log(result[0].name);
                        SetSelectedValue(result[0].name, "#ddlApprover");
                        $("#ApproverId").val(result[0].id);
                    } else {

                    }
                })
        }

         function getApproverSpecialCase() {

              $.get("@Url.Action("GetAllWHApproverForManagerMore500k", "BankDraft")", {
                dataType: 'json'
            })
                .done(function (result) {
                    if (result != null) {
                        console.log(result[0].name);
                        SetSelectedValue(result[0].name, "#ddlApprover");
                        $("#ApproverId").val(result[0].id);
                    } else {

                    }
                })

        }

        function refeshagain() {
            $("#jsGrid1").jsGrid("refresh");
        }

        $(function () {



            $("nav").addClass("shrinked");
            //$("#toggle-btn").addClass("active");
            $(".brand-big").hide()
            $(".brand-small").hide();
            $("#submitGroupBtn").show();
            //$("td a i.ti-upload").show();
            $("td a i.la-chain").show();
            $("td a i.la-trash").show();
            $("td a i.la-download").show();
            $(".status-footer").hide();
            $(".after-submit").hide();

            var db = {

                loadData: function (filter) {
                    //return $.ajax({
                    //    type: "GET",
                    //    url: "/AccountingTable/GetAllAccountingTableByWangHangusId?Id=" + wangHangusId,
                    //    dataType: "JSON",
                    //    data: filter

                    //});
                    //console.log('hello');

                },

                insertItem: function (insertingClient) {
                    //this.clients.push(insertingClient);

                    $('#listAccounting').val($('#listAccounting').val() + JSON.stringify(insertingClient));
                    console.log($('#listAccounting').val());
                },

                updateItem: function (d) {
                    //this.clients
                    $('#listAccounting').val(JSON.stringify(d));
                    console.log($('#listAccounting').val());
                    //refeshagain();

                },

                deleteItem: function (deletingClient) {
                    var clientIndex = $.inArray(deletingClient, this.clients);
                    this.clients.splice(clientIndex, 1);
                    $('#listAccounting').val(JSON.stringify(this.clients));
                    console.log($('#listAccounting').val());
                }

            };

            window.db = db;

            db.DrCr = [
                { Name: "", Id: "" },
                { Name: "DR", Id: "DR" },
                { Name: "CR", Id: "CR" }
            ];

            db.CONW = [
                { Name: "", Id: "" },
                { Name: "C", Id: "C" },
                { Name: "O", Id: "O" },
                { Name: "N", Id: "N" },
                { Name: "W", Id: "W" }
            ];

            db.Currency = [
                { Name: "", Id: "" },
                //{ Name: "IDR", Id: "IDR" },
                { Name: "MYR", Id: "MYR" },
                //{ Name: "USD", Id: "USD" },
                //{ Name: "SGD", Id: "SGD" },
                //{ Name: "CNY", Id: "CNY" }
            ];

            db.clients = [
                {
                    "drCr": "",
                    "glAccount": "",
                    "conw": "",
                    //"conwNo": "",
                    "costObject": "",
                    "taxCode": "",
                    "currency": "",
                    "taxAmount": "",
                    "amount": ""
                }
            ];

            function formatNumberForDisplay(numberToFormat) {
                var formatter = new Intl.NumberFormat('en-US', {
                    style: 'currency',
                    currency: 'USD',
                    digits: 2,
                });

                return formatter.format(numberToFormat).substr(1);
            }

            function MoneyField(config) {
                jsGrid.NumberField.call(this, config);
            }

            MoneyField.prototype = new jsGrid.NumberField({

                itemTemplate: function (value) {
                    return formatNumberForDisplay(value);
                },

                 filterValue: function () {
                    return parseFloat(this.filterControl.val() || 0);
                },

                insertValue: function () {
                    return parseFloat(this.insertControl.val() || 0);
                },

                editValue: function () {
                    return parseFloat(this.editControl.val() || 0);
                }

            });

            jsGrid.fields.money = MoneyField;


            $("#jsGrid1").jsGrid({
                width: "100%",
                filtering: false,
                editing: true,
                inserting: true,
                sorting: true,
                paging: true,
                autoload: true,
                pageSize: 10,
                pageButtonCount: 2,
                deleteConfirm: "Do you really want to delete this row?",
                invalidMessage: "Please field in the compulsory field!",
                //invalidNotify: function (args) {
                //    var messages = $.map(args.errors, function (error) {
                //        return error.field + ": " + error.message;
                //    });

                //},
                controller: db,

                data: db.clients,

                onRefreshed: function (args) {
                    var items = args.grid.option("data");
                    var total = { "taxAmount": 0, "amount": 0, "total": 0, IsTotal: true };

                    items.forEach(function (item) {
                        if (item.drCr == "CR") {
                            total.amount += -item.amount;
                            total.taxAmount += -item.taxAmount;
                            total.total += -(item.amount + item.taxAmount);
                        }
                        else {
                            total.amount += +item.amount;
                            total.taxAmount += +item.taxAmount;
                            total.total += item.amount + item.taxAmount;
                        }

                    });

                    //.toFixed(2).toLocaleString()
                    jumlah = total;
                    var currTotal = jumlah.total;

                    $("#lblTotalAmount").empty();

                    if (currTotal < 0) {
                        currTotal = -currTotal;
                        $("#lblTotalAmount").append("<b>Total Amount(include Tax): RM (" + parseFloat(currTotal).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,') + ")</b>");
                    }
                    else {
                        $("#lblTotalAmount").append("<b>Total Amount(include Tax): RM " + parseFloat(currTotal).toFixed(2).replace(/\d(?=(\d{3})+\.)/g, '$&,') + "</b>");
                    }

                    console.log(jumlah.total);
                    console.log(manager);
                    console.log(divType);
                    $('#ddlApprover').empty();
                    if (manager == 'True' && jumlah.total > 500000 && divType == 1) {

                        getApproverSpecialCase();

                        $("#ddlApprover").select2({
                            minimumResultsForSearch: -1,
                            ajax: {
                                url: "/BankDraft/GetAllWHApproverForManagerMore500k",
                                dataType: 'json',
                                type: "GET",
                                processResults: function (data) {
                                    return {
                                        results: $.map(data, function (item) {
                                            return {
                                                text: item.name,
                                                id: item.id
                                            }

                                        })
                                    };
                                }
                            }
                        });

                        $('#ddlApprover').on('select2:select', function (e) {
                            var data = e.params.data;
                            if (data.selected) {
                                var id = data.id;
                                $("#ApproverId").val(id);
                            }
                        });
                    }
                    else {
                        console.log("executive:" + executive + " jumlah:" + jumlah + " divType:" + divType);
                        if (executive == 'True' && jumlah.total > 500000 && divType == 1) {
                            ShowNoty("error", "Not authoritive to apply wang hangus that exceed amount of RM500,000..");
                        }

                        getApprover();

                        $("#ddlApprover").select2({
                            minimumResultsForSearch: -1,
                            ajax: {
                                url: "/BankDraft/GetAllWHApprover",
                                dataType: 'json',
                                type: "GET",
                                processResults: function (data) {
                                    return {
                                        results: $.map(data, function (item) {
                                            return {
                                                text: item.name,
                                                id: item.id
                                            }

                                        })
                                    };
                                }
                            }
                        });

                        $('#ddlApprover').on('select2:select', function (e) {
                            var data = e.params.data;
                            if (data.selected) {
                                var id = data.id;
                                $("#ApproverId").val(id);
                            }
                        })
                    }

                    if (total.total < 0) {
                        total.taxAmount = "(" + -total.taxAmount + ")";
                        total.amount = "(" + -total.amount + ")";
                    }

                    var $totalRow = $("<tr>").addClass("total-row");

                    args.grid._renderCells($totalRow,total);

                    args.grid._content.append($totalRow);

                },

                onItemUpdated: function (args) {
                    $("#jsGrid1").jsGrid("refresh");
                },

                //onDataLoading: function (args) {
                //    // cancel loading data if 'name' is empty
                //    if (args.filter.name === "") {
                //        args.cancel = true;
                //    }
                //},

                fields: [
                    { name: "drCr", title: "DR/CR <span style='color:red'>*</span>", type: "select", items: db.DrCr, valueField: "Id", textField: "Name", validate: "required"},
                    { name: "glAccount", title: "GL Account <span style='color:red'>*</span>", type: "text", width: 100, validate: "required"},
                    { name: "conw", title: "C/O/N/W <span style='color:red'>*</span>", type: "select", items: db.CONW, valueField: "Id", textField: "Name", validate: "required"},
                    //{ name: "conwNo", title: "C/O/N/W No.", type: "text", width: 100, validate: "required" },
                    { name: "costObject", title: "Cost Object <span style='color:red'>*</span>", type: "text", width: 100, validate: "required" },
                    { name: "taxCode", title: "Tax Code", type: "text", width: 100},
                    {
                        name: "currency", title: "Currency", type: "text", textField: "Name", validate: "required", readOnly: true,
                        itemTemplate: function (_, item) {
                                return "MYR";
                        },
                        editTemplate: function () {
                            var input = this.__proto__.editTemplate.call(this);

                            input.val('MYR')

                            return input;
                        },
                        insertTemplate: function () {
                            var input = this.__proto__.insertTemplate.call(this);

                            input.val('MYR')

                            return input;
                        },
                    },
                    {
                        name: "taxAmount", title: "Tax Amount (RM)", items: db.taxAmount, type: "money", width: 100,
                        itemTemplate: function (val, item) {
                            if (val != null && val != "" && item.drCr == "CR")
                                return "(" + val + ")";
                            else
                                return formatNumberForDisplay(val);
                        },
                    },
                    {
                        name: "amount", title: "Amount (RM) <span style='color:red'>*</span>", type: "money", items: db.amount, width: 100, validate: { message: "Tax Amount should be more than 0.", validator: function (value) { return value > 0; } },
                        itemTemplate: function (val, item) {
                            if (val != null && val != "" && item.drCr == "CR")
                                return "(" + val + ")";
                            else
                                return formatNumberForDisplay(val);
                        },
                    },
                    { type: "control", modeSwitchButton: true ,
                        itemTemplate: function (_, item) {
                            if (item.IsTotal)
                                return "";
                             return jsGrid.fields.control.prototype.itemTemplate.apply(this, arguments);
                        }
                    }
                ]
            });

        });


        $("#btnDraft").on('click', function (e) {
            $("#Status").val("Draft");
            $("#formCreateApplication").submit();
        });

        $("#btnSubmitConfirm").on('click', function (e) {

            console.log($('#listAccounting').val());

            var totalAmount = jumlah.total;

            console.log(jumlah.total + "kiki");

            var file = null;
            var fileInput = $('#document0Id')[0];
            if (fileInput != null) {
                file = fileInput.files[0];
            }
            console.log(file);
            if (executive == 'True' && divType == 1)
            {

                         if (totalAmount > 500000) {
                        ShowNoty("error", "Not authoritive to apply wang hangus that exceed amount of RM500,000..");
                    }
                    else if (totalAmount <= 500000) {
                        if ($("#formCreateApplication").valid()) {
                            if ($('#listAccounting').val() == "") {
                                ShowNoty("error", "Please fill accounting table!");
                            }
                            else if (totalAmount < 0)
                            {
                                ShowNoty("error", "Total amount cannot be less than zero..");
                            }
                            else if (file == null) {
                                ShowNoty("error", "Supporting Document Required!!");
                            }
                            else {
                                $("#Status").val("Submit");
                                $("#formCreateApplication").submit();
                            }
                        }
                        else {
                            ShowNoty("error", "Please fill all required fields!");
                        }
                    }


            }
            else if (hoz == 'True' && divType == 1){

                if (totalAmount <= 500000) {
                    ShowNoty("error", "Not authoritive to apply wang hangus that has less amount than RM500,000..");
                }
                else if (totalAmount > 500000) {
                    if ($("#formCreateApplication").valid()) {
                        if ($('#listAccounting').val() == "") {
                            ShowNoty("error", "Please fill accounting table!");
                        }
                        else if (file == null) {
                            ShowNoty("error", "Supporting Document Required!!");
                        }
                        else {
                            $("#Status").val("Submit");
                            $("#formCreateApplication").submit();
                        }
                    }
                    else {
                        ShowNoty("error", "Please fill all required fields!");
                    }
                }

            }
            else{

                    if ($("#formCreateApplication").valid()) {
                        if ($('#listAccounting').val() == "") {
                            ShowNoty("error", "Please fill accounting table!");
                        }
                        else if (counter2 == 0) {
                            ShowNoty("error", "Supporting Document Required!!");
                        }
                        else {
                            $("#Status").val("Submit");
                            $("#formCreateApplication").submit();
                        }
                    }
                    else {
                        ShowNoty("error", "Please fill all required fields!");
                    }

            }

        });

        var counter2 = 0;

        $(document).ready(function () {

            $("[data-toggle=tooltip]").tooltip({ placement: 'right' });

            $("#ddlVendorType").append("<option value='OneTime'>OneTime</option>");
            $("#WangHangusViewModel.VendorType").val("OneTime");
            vendorType = "OneTime";
            $("#ddlState").append("<option value=''>Please Select</option>");
            $("#ddlCountry").append("<option value=''>Please Select</option>");
            if ($("#bankAccount").val() == "") {
                 $("#ddlBankCountry").append("<option value=''>Please Select</option>");
            }
            $("#ddlCompanyCode").append("<option value=''>Please Select</option>");
            $("#ddlBusinessArea").append("<option value=''>Please Select</option>");
            //$("#ddlVendorType").append("<option value='OneTime'>OneTime</option>");

            //$('select').val('').select2();

            var t = $('#suppDoc').DataTable({ searching: false, paging: false, info: false });
            //var t = $('#suppDoc').DataTable();
            var count = 1;
            $('#addRow').on('click', function () {
                t.row.add([
                    count,
                    //'Attachment ' + count,
                    '<td class="td-actions"><div class="before-submit"><input type="text" id="fname' + counter2 +'Id" name="fname" class="form-control"></div></td>',
                    '<td class="td-actions"><div class="file-upload before-submit"><input id="document' + counter2 +'Id" name="doc" type="file"></div></td>',
                    '<a id="dustbinId"><i class="la la-trash"></i></a>'
                ]).draw(false);

                count++;
                counter2++;
            });

            $('#suppDoc tbody').on('click', '#dustbinId', function () {
                t
                    .row($(this).parents('tr'))
                    .remove()
                    .draw();
                count--;
                counter2--;
            });

            // Automatically add a first row of data
            $('#addRow').click();
            $('#dustbinId').click();



            $("#ddlState").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllState",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $("#ddlCountry").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllCountry",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $("#ddlCompanyCode").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllCompanyCode",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $("#ddlBusinessArea").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllBusinessArea",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $("#ddlVendorNo").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllVendorNo",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $("#ddlBankCountry").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllCountry",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.name
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlBankCountry').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    countryBank = data.text;

                }
            });

            $('#bankAccount').on('change', function () {
                if ($('#bankAccount').val() != "") {
                    $("#ddlBankCountry option[value='']").remove();
                    SetSelectedValue('Malaysia', "#ddlBankCountry");
                    countryBank = "Malaysia";
                }
                else if ($('#bankAccount').val() == "") {
                    $("#ddlBankCountry").empty();
                    $("#ddlBankCountry").append("<option value=''>Please Select</option>");
                }
                //alert($('#bankAccount').val());
            });

            $("#ddlVendorType").select2({
                minimumResultsForSearch: -1,
                ajax: {
                    url: "/BankDraft/GetAllVendorType",
                    dataType: 'json',
                    type: "GET",
                    processResults: function (data) {
                        console.log(data);
                        return {
                            results: $.map(data, function (item) {
                                return {
                                    text: item.name,
                                    id: item.id
                                }

                            })
                        };
                    }
                }
            });

            $('#ddlVendorType').on('select2:select', function (e) {
                var data = e.params.data;
                if (data.selected) {
                    //var id = data.id;
                    vendorType = data.text;

                    if (vendorType == "Registered") {
                        $('#pnl_second_form').show();
                        $('#pnl_main_form').hide();
                        vendorType = "Registered";
                        $("#WangHangusViewModel.VendorType").val("Registered");
                    }
                    else if (vendorType == "OneTime") {
                        $('#pnl_main_form').show();
                        $('#pnl_second_form').hide();
                        vendorType = "OneTime";
                        $("#WangHangusViewModel.VendorType").val("OneTime");
                    }
                }
            });

        });

        $("#formCreateApplication").submit(function (e) {

            e.preventDefault(); // avoid to execute the actual submit of the form.

            $("#btnSubmit").attr('data-target', ''); //prevent double click during submit

            ShowNoty("warning", "Saving Bank Draft..");

            var form = $(this);
            var url = "/wanghangus/createform"
                //form.attr('action');
            var fdata = new FormData();


            for (var i = 0; i < counter2; i++) {

                if ($('#document' + i + 'Id').length) {
                    if ($('#document' + i + 'Id').get(0).files.length !== 0) {

                        var fileInput = $('#document' + i + 'Id')[0];
                        var file = fileInput.files[0];
                        fdata.append("WHFile", file);

                        var fileName = $('#fname' + i + 'Id').val();
                        fdata.append("WHFileName", fileName);
                    }
                }
              

                console.log("fileName:" + fileName);
            }

             //You can update the jquery selector to use a css class if you want
            fdata.append("WangHangusViewModel.BankCountry", countryBank);
            fdata.append("WangHangusViewModel.VendorType", vendorType);
            $("input[type='text'], input[type='hidden']").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            $("input, select, textarea").each(function (x, y) {
                fdata.append($(y).attr("name"), $(y).val());
            });

            for (var value of fdata.values()) {
                console.log(value);
            }
            for (var key of fdata.keys()) {
                console.log(key);
            }
            console.log(fdata);
            $.ajax({
                type: "POST",
                url: url,
                data: fdata,
                enctype: 'multipart/form-data',
                    //fdata, //form.serialize(), // serializes the form's elements.
                processData: false,
                contentType: false,
                success: function (data) {
                    console.log(data);
                    if (data.response.statusCode == 200) {
                        ShowNoty("success", data.message);
                        href = "/Application/MyApplication";
                        setTimeout(function () {
                            window.location.href = href;
                        }, 3000);
                    } else {
                        ShowNoty("error", data.message);
                        $("#btnSubmit").attr('data-target', '#confirmation-submit-modal');
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.status == 404) {
                        alert(xhr.status + ': ' + xhr.statusText);
                    }
                }
            });
        });

    </script>
    <script src="~/assets/js/components/wizard/form-wizard.min.js"></script>
    <script src="~/assets/vendors/js/bootstrap-select/bootstrap-select.min.js"></script>
}


